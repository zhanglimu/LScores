{"version":3,"file":"index.es5.js","sources":["../../../../src/app/weui/public_api.ts","../../../../src/app/weui/src/weui.ts","../../../../src/app/weui/src/weui.module.ts","../../../../src/app/weui/src/validation/form.validation.ts","../../../../src/app/weui/src/picker/weui.picker.service.ts","../../../../src/app/weui/src/overlay/layer.ts","../../../../src/app/weui/src/toptips/weui.toptip.ts","../../../../src/app/weui/src/toast/weui.toast.ts","../../../../src/app/weui/src/dialog/weui.dialog.ts","../../../../src/app/weui/src/actionsheet/weui.actionsheet.ts","../../../../src/app/weui/src/uploader/weui.uploader.ts","../../../../src/app/weui/src/list/weui.title.ts","../../../../src/app/weui/src/list/weui.tips.ts","../../../../src/app/weui/src/tabbar/weui.tabbar.ts","../../../../src/app/weui/src/tabbar/weui.tabbar.item.ts","../../../../src/app/weui/src/input/weui.switch.ts","../../../../src/app/weui/src/slider/weui.slider.ts","../../../../src/app/weui/src/input/weui.select.ts","../../../../src/app/weui/src/searchbar/weui.searchbar.ts","../../../../src/app/weui/src/input/weui.radio.ts","../../../../src/app/weui/src/progress/weui.progress.ts","../../../../src/app/weui/src/navbar/weui.navbar.ts","../../../../src/app/weui/src/navbar/weui.navbar.item.ts","../../../../src/app/weui/src/loadmore/weui.loadmore.ts","../../../../src/app/weui/src/list/weui.link.ts","../../../../src/app/weui/src/list/weui.item.ts","../../../../src/app/weui/src/list/weui.items.ts","../../../../src/app/weui/src/input/weui.input.ts","../../../../src/app/weui/src/gallery/weui.gallery.ts","../../../../src/app/weui/src/footer/weui.footer.ts","../../../../src/app/weui/src/picker/weui.date.picker.ts","../../../../src/app/weui/src/picker/cron.ts","../../../../src/app/weui/src/picker/weui-picker-group.ts","../../../../src/app/weui/src/picker/weui.picker.ts","../../../../src/app/weui/src/input/weui.checkbox.ts","../../../../src/app/weui/src/button/weui.submit.ts","../../../../src/app/weui/src/button/weui.button.ts","../../../../src/app/weui/src/badge/weui.badge.ts","../../../../src/app/weui/src/input/weui.form.control.ts"],"sourcesContent":["/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the weui package.\n */\nexport {WeUIFormControl,WeUIBadge,WeUIButton,WeUISubmit,WeUICheckbox,WeUIDatePicker,WeUIFooter,WeUIFooterText,WeUIFooterLinks,WeUIFooterLink,WeUIGallery,WeUIInput,WeUIItems,WeUIItem,WeUILink,WeUILoadmore,WeUINavBar,WeUINavBarItem,WeUIPicker,WeUIPickerGroup,WeUIProgressBar,WeUIRadio,WeUISearchBar,WeUISelect,WeUISlider,WeUISwitch,WeUITabBar,WeUITabBarItem,WeUITips,WeUITitle,WeUIUploader,WeUIFile,WeUIActionSheet,WeUIDialog,WeUIToast,WeUITopTips,Layer,WeUIPickerService,FormValidation,WeUIModule} from './src/weui';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the weui package.\n */\nexport { WeUIFormControl } from './input/weui.form.control';\nexport { WeUIBadge } from './badge/weui.badge';\nexport { WeUIButton } from './button/weui.button';\nexport { WeUISubmit } from './button/weui.submit';\nexport { WeUICheckbox } from './input/weui.checkbox';\nexport { WeUIDatePicker } from './picker/weui.date.picker';\nexport { WeUIFooter, WeUIFooterText, WeUIFooterLinks, WeUIFooterLink } from './footer/weui.footer';\nexport { WeUIGallery } from './gallery/weui.gallery';\nexport { WeUIInput } from './input/weui.input';\nexport { WeUIItems } from './list/weui.items';\nexport { WeUIItem } from './list/weui.item';\nexport { WeUILink } from './list/weui.link';\nexport { WeUILoadmore } from './loadmore/weui.loadmore';\nexport { WeUINavBar } from './navbar/weui.navbar';\nexport { WeUINavBarItem } from './navbar/weui.navbar.item';\nexport { WeUIPicker } from './picker/weui.picker';\nexport { WeUIPickerGroup } from './picker/weui-picker-group';\nexport { WeUIProgressBar } from './progress/weui.progress';\nexport { WeUIRadio } from './input/weui.radio';\nexport { WeUISearchBar } from './searchbar/weui.searchbar';\nexport { WeUISelect } from './input/weui.select';\nexport { WeUISlider } from './slider/weui.slider';\nexport { WeUISwitch } from './input/weui.switch';\nexport { WeUITabBar } from './tabbar/weui.tabbar';\nexport { WeUITabBarItem } from './tabbar/weui.tabbar.item';\nexport { WeUITips } from './list/weui.tips';\nexport { WeUITitle } from './list/weui.title';\nexport { WeUIUploader, WeUIFile } from './uploader/weui.uploader';\nexport { WeUIActionSheet } from './actionsheet/weui.actionsheet';\nexport { WeUIDialog } from './dialog/weui.dialog';\nexport { WeUIToast } from './toast/weui.toast';\nexport { WeUITopTips } from './toptips/weui.toptip';\nexport { Layer } from './overlay/layer';\nexport { WeUIPickerService } from './picker/weui.picker.service';\nexport { FormValidation } from './validation/form.validation';\n\nexport { WeUIModule } from './weui.module';\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n/**\n * Import Angular\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n/** Import WeUI Components */\n\nimport { WeUIFormControl } from './input/weui.form.control';\nimport { WeUIBadge } from './badge/weui.badge';\nimport { WeUIButton } from './button/weui.button';\nimport { WeUISubmit } from './button/weui.submit';\nimport { WeUICheckbox } from './input/weui.checkbox';\nimport { WeUIDatePicker } from './picker/weui.date.picker';\nimport { WeUIFooter, WeUIFooterText, WeUIFooterLinks, WeUIFooterLink } from './footer/weui.footer';\nimport { WeUIGallery } from './gallery/weui.gallery';\nimport { WeUIInput } from './input/weui.input';\nimport { WeUIItems } from './list/weui.items';\nimport { WeUIItem } from './list/weui.item';\nimport { WeUILink } from './list/weui.link';\nimport { WeUILoadmore } from './loadmore/weui.loadmore';\nimport { WeUINavBar } from './navbar/weui.navbar';\nimport { WeUINavBarItem } from './navbar/weui.navbar.item';\nimport { WeUIPicker } from './picker/weui.picker';\nimport { WeUIPickerGroup } from './picker/weui-picker-group';\nimport { WeUIProgressBar } from './progress/weui.progress';\nimport { WeUIRadio } from './input/weui.radio';\nimport { WeUISearchBar } from './searchbar/weui.searchbar';\nimport { WeUISelect } from './input/weui.select';\nimport { WeUISlider } from './slider/weui.slider';\nimport { WeUISwitch } from './input/weui.switch';\nimport { WeUITabBar } from './tabbar/weui.tabbar';\nimport { WeUITabBarItem } from './tabbar/weui.tabbar.item';\nimport { WeUITips } from './list/weui.tips';\nimport { WeUITitle } from './list/weui.title';\nimport { WeUIUploader } from './uploader/weui.uploader';\nimport { FormValidation } from './validation/form.validation';\n\n/**\n * Import WeUI Overlay Entry Components\n */\n\nimport { WeUIActionSheet } from './actionsheet/weui.actionsheet';\nimport { WeUIDialog } from './dialog/weui.dialog';\nimport { WeUIToast } from './toast/weui.toast';\nimport { WeUITopTips } from './toptips/weui.toptip';\nimport { Layer } from './overlay/layer';\nimport { WeUIPickerService } from './picker/weui.picker.service';\n/**\n * \\@name WeUIModule\n * \\@description \n * WeUIModule is an NgModule that provides weui-style TypeScript/JavaScript components.\n * @author fbchen 2017-03-08\n */\nexport class WeUIModule {\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    declarations: [\n        WeUIFormControl,\n        WeUIButton,\n        WeUISubmit,\n        WeUIInput,\n        WeUIRadio,\n        WeUICheckbox,\n        WeUISwitch,\n        WeUISelect,\n        WeUISlider,\n        WeUIGallery,\n        WeUIUploader,\n        WeUIItems,\n        WeUIItem,\n        WeUILink,\n        WeUITitle,\n        WeUITips,\n        WeUIBadge,\n        WeUIFooter,\n        WeUIFooterText,\n        WeUIFooterLinks,\n        WeUIFooterLink,\n        WeUILoadmore,\n        WeUIProgressBar,\n        WeUIActionSheet,\n        WeUIDialog,\n        WeUIToast,\n        WeUITopTips,\n        WeUIPicker,\n        WeUIDatePicker,\n        WeUIPickerGroup,\n        WeUISearchBar,\n        WeUINavBar,\n        WeUINavBarItem,\n        WeUITabBar,\n        WeUITabBarItem,\n        FormValidation\n    ],\n    exports: [\n        WeUIFormControl,\n        WeUIButton,\n        WeUISubmit,\n        WeUIInput,\n        WeUIRadio,\n        WeUICheckbox,\n        WeUISwitch,\n        WeUISelect,\n        WeUISlider,\n        WeUIGallery,\n        WeUIUploader,\n        WeUIItems,\n        WeUIItem,\n        WeUILink,\n        WeUITitle,\n        WeUITips,\n        WeUIBadge,\n        WeUIFooter,\n        WeUIFooterText,\n        WeUIFooterLinks,\n        WeUIFooterLink,\n        WeUILoadmore,\n        WeUIProgressBar,\n        WeUIActionSheet,\n        WeUIDialog,\n        WeUIToast,\n        WeUITopTips,\n        WeUIPicker,\n        WeUIDatePicker,\n        WeUISearchBar,\n        WeUINavBar,\n        WeUINavBarItem,\n        WeUITabBar,\n        WeUITabBarItem,\n        FormValidation\n    ],\n    entryComponents: [\n        WeUIActionSheet,\n        WeUIDialog,\n        WeUIToast,\n        WeUITopTips,\n        WeUIPicker,\n        WeUIDatePicker\n    ],\n    providers: [\n        Layer,\n        WeUIPickerService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WeUIModule_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Let'say COFFEE © 2017-2018\n * Copyright 厦门美乐味餐饮管理有限公司 All Rights Reserved.\n */\n\n\n\nimport { Component, Input, ElementRef } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isPresent(obj: any): boolean {\n    return obj !== undefined && obj !== null;\n}\n\n/**\n * 控件与提示信息，例如：<code>\n * {\n *     username: {\n *         required: '用户名不能为空',\n *         maxlength: '请输入小于10位长度的字符',\n *         ......\n *     }\n * }\n * </code>\n */\nexport interface FieldMessages {\n    [key: string]: {\n        [key: string]: string\n    };\n}\nexport class FormValidation {\n/**\n * 自定义错误消息\n */\nmessages: FieldMessages = {};\n/**\n * 控件名称\n */\nname: string;\n/**\n * 验证结果，例如: [{username: '必须填写'}, {password: '输入非法'}]\n */\nprotected formErrors: { name: string, message: string }[] = [];\n\n    protected defaultValidationMessages = {\n        required: '该项为必填项',\n        email: '请输入有效的电子邮件',\n        url: '请输入有效的网址',\n        date: '请输入有效的日期',\n        dateISO: '请输入有效的日期 (YYYY-MM-DD)',\n        number: '请输入正确的数字',\n        digits: '只可输入数字',\n        alphanumeric: '只可输入字母、数字及下划线',\n        maxlength: '最多 {0} 个字符',\n        minlength: '最少 {0} 个字符',\n        rangelength: '请输入长度为 {0} 至 {1} 之间的字符',\n        range: '请输入 {0} 至 {1} 之间的数值',\n        max: '请输入不大于 {0} 的数值',\n        min: '请输入不小于 {0} 的数值'\n    };\n/**\n * @param {?} _element\n * @param {?} _form\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _form: NgForm) {\n        if (_form && _form.ngSubmit) {\n            _form.ngSubmit.subscribe(this.onSubmit.bind(this));\n        }\n    }\n/**\n * @return {?}\n */\nshowByName(): boolean {\n        return isPresent(this.name) && this.name.length > 0;\n    }\n/**\n * Form验证后，自动执行消息提示匹配\n * @return {?}\n */\nonSubmit(): void {\n        this.validate();\n    }\n/**\n * 验证表单，结果存入formErrors\n * \n * @return {?} 验证结果: true-success, false-fail\n */\npublic validate(): boolean {\n        const /** @type {?} */ formErrors = [];\n        const /** @type {?} */ form = this._form;\n        if (!form) {\n            return false;\n        }\n\n        for (const /** @type {?} */ field in form.controls) {\n            if (form.controls.hasOwnProperty(field)) {\n                const /** @type {?} */ control = form.controls[field];\n                const /** @type {?} */ errors = control && control.errors || {};\n\n                if (control && control.invalid && (control.dirty || form.submitted)) {\n                    const /** @type {?} */ messages = (this.messages && this.messages[field]) || {};\n                    if (errors['required']) {\n                        formErrors.push({\n                            name: field,\n                            message: messages['required'] || this.defaultValidationMessages['required']\n                        });\n                        continue; // 默认先验证必填消息\n                    }\n\n                    for (const /** @type {?} */ key in errors) {\n                        if (errors.hasOwnProperty(key)) {\n                            formErrors.push({\n                                name: field,\n                                message: messages[key] || this.defaultValidationMessages[key]\n                            });\n                            continue; // 若一个输入框存在多个验证器，即使存在多个错误消息，也仅取一条错误消息\n                        }\n                    }\n                }\n            }\n        }\n        this.formErrors = formErrors;\n        return form.valid === true;\n    }\n/**\n * 是否已submitted\n * @return {?}\n */\npublic get submitted(): boolean {\n        return this._form && this._form.submitted;\n    }\n/**\n * 是否验证通过\n * @return {?}\n */\npublic get valid(): boolean {\n        return this._form && this._form.valid === true;\n    }\n/**\n * 是否验证不通过\n * @return {?}\n */\npublic get invalid(): boolean {\n        return this._form && this._form.invalid === true;\n    }\n/**\n * 是否存在错误\n * @param {?=} name\n * @return {?}\n */\npublic hasError(name?: string): boolean {\n        if (name) {\n            return this.getError(name) !== null;\n        }\n\n        return this.formErrors.length > 0;\n    }\n/**\n * 当存在多个错误消息时，用此方法获取其中的第一个非空错误显示\n * @return {?}\n */\npublic firstError(): string | null {\n        const /** @type {?} */ err = this.formErrors[0];\n        return (err && err.message) || null;\n    }\n/**\n * 获取控件的一个错误\n * \n * @param {?} name 控件name\n * @return {?} 控件错误消息，或者空(没有错误)\n */\npublic getError(name: string): string | null {\n        const /** @type {?} */ len = this.formErrors.length;\n        for (let /** @type {?} */ i = 0; i < len; i++) {\n            const /** @type {?} */ err = this.formErrors[i];\n            if (err.hasOwnProperty(name)) {\n                return err[name];\n            }\n        }\n\n        return null;\n    }\n\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'form-validation',\n    template: `\n        <div class=\"error\" *ngIf=\"showByName() && hasError(name)\">\n            {{getError(name)}}\n        </div>\n        <div class=\"error\" *ngIf=\"!showByName() && hasError()\">\n            {{firstError()}}\n        </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgForm, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'messages': [{ type: Input },],\n'name': [{ type: Input },],\n};\n}\n\nfunction FormValidation_tsickle_Closure_declarations() {\n/** @type {?} */\nFormValidation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFormValidation.ctorParameters;\n/** @type {?} */\nFormValidation.propDecorators;\n/**\n * 自定义错误消息\n * @type {?}\n */\nFormValidation.prototype.messages;\n/**\n * 控件名称\n * @type {?}\n */\nFormValidation.prototype.name;\n/**\n * 验证结果，例如: [{username: '必须填写'}, {password: '输入非法'}]\n * @type {?}\n */\nFormValidation.prototype.formErrors;\n/** @type {?} */\nFormValidation.prototype.defaultValidationMessages;\n/** @type {?} */\nFormValidation.prototype._element;\n/** @type {?} */\nFormValidation.prototype._form;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Injectable, Inject } from '@angular/core';\nimport { ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, ApplicationRef, Injector, NgZone, Type } from '@angular/core';\nimport { ɵgetDOM as getDOM, DOCUMENT } from '@angular/platform-browser';\n\nimport { WeUIPicker, PickerOption } from './weui.picker';\nimport { WeUIDatePicker } from './weui.date.picker';\n\nlet /** @type {?} */ seed = 0;\nconst /** @type {?} */ now = Date.now();\n/**\n * @return {?}\n */\nfunction getUuid() {\n    return `_picker_${now}_${seed++}`;\n}\n/**\n * Picker服务\n */\nexport class WeUIPickerService {\n/**\n * @param {?} _componentFactoryResolver\n * @param {?} _appRef\n * @param {?} _injector\n * @param {?} _ngZone\n * @param {?} doc\n */\nconstructor(\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _appRef: ApplicationRef,\nprivate _injector: Injector,\nprivate _ngZone: NgZone,\nprivate doc: Document) {\n\n    }\n/**\n * 显示单列Picker\n * \n * @param {?} menu  菜单选项\n * @return {?}\n */\npublic showPicker(menu: PickerOption[]): Promise<any> {\n        const /** @type {?} */ picker = this.createPicker(WeUIPicker, { menu });\n        return picker.show();\n    }\n/**\n * 显示多列Picker\n * \n * @param {?} menus  菜单选项（多列）\n * @return {?}\n */\npublic showMultiPicker(menus: PickerOption[][]): Promise<any> {\n        const /** @type {?} */ picker = this.createPicker(WeUIPicker, { menus });\n        return picker.show();\n    }\n/**\n * 显示日期Picker\n * \n * @param {?=} config  配置项\n * @return {?}\n */\npublic showDatePicker(config?: any): Promise<any> {\n        const /** @type {?} */ picker = this.createPicker(WeUIDatePicker, config);\n        return picker.show();\n    }\n/**\n * @param {?} component\n * @param {?} config\n * @return {?}\n */\nprivate createPicker(component: Type<WeUIPicker>, config: any): WeUIPicker {\n        const /** @type {?} */ componentRef = this._createComponent(component);\n        const /** @type {?} */ instance: WeUIPicker = componentRef.instance;\n        instance.close.subscribe(() => {\n            componentRef.destroy();\n            componentRef['_container'].remove();\n        });\n        if (config) {\n            Object.assign(instance, config);\n        }\n        this.afterCreate(instance);\n        return instance;\n    }\n/**\n * this method is called before thild component's ngAfterViewInit\n * @param {?} instance\n * @return {?}\n */\nprotected afterCreate(instance: any): void {\n\n    }\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nprivate _createComponent<T>(component: Type<T>): ComponentRef<T> {\n        const /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(component);\n        const /** @type {?} */ componentRef: ComponentRef<T> = componentFactory.create(this._injector);\n        this._appRef.attachView(componentRef.hostView);\n\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        const /** @type {?} */ _hostDomElement = this._getContainer();\n        _hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n        componentRef['_container'] = _hostDomElement;\n        return componentRef;\n    }\n/**\n * Gets the root HTMLElement for an instantiated component.\n * @param {?} componentRef\n * @return {?}\n */\nprivate _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\n        return /** @type {?} */(( ( /** @type {?} */((componentRef.hostView as EmbeddedViewRef<any>))).rootNodes[0] as HTMLElement));\n    }\n/**\n * @return {?}\n */\nprivate _getContainer(): HTMLElement {\n        const /** @type {?} */ div: HTMLElement = getDOM().createElement('div');\n        div.id = getUuid();\n        div.classList.add('weui-overlay');\n        getDOM().appendChild(this.doc.body, div);\n        return div;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: ApplicationRef, },\n{type: Injector, },\n{type: NgZone, },\n{type: Document, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction WeUIPickerService_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIPickerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIPickerService.ctorParameters;\n/** @type {?} */\nWeUIPickerService.prototype._componentFactoryResolver;\n/** @type {?} */\nWeUIPickerService.prototype._appRef;\n/** @type {?} */\nWeUIPickerService.prototype._injector;\n/** @type {?} */\nWeUIPickerService.prototype._ngZone;\n/** @type {?} */\nWeUIPickerService.prototype.doc;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Injectable, ApplicationRef, Injector, NgZone, Type } from '@angular/core';\n\nimport { WeUIDialog } from '../dialog/weui.dialog';\nimport { WeUIToast } from '../toast/weui.toast';\nimport { WeUITopTips } from '../toptips/weui.toptip';\nimport { WeUIActionSheet } from '../actionsheet/weui.actionsheet';\n/**\n * Next overlay unique ID.\n */\nlet nextUniqueId = 0;\n\nexport interface DialogProps {\n    mode?: string;\n    title?: string;\n    content?: string;\n    btnNOText?: string;\n    btnOKText?: string;\n    showNOButton?: boolean;\n    type?: string | null;\n    icon?: string;\n    iconCls?: string;\n};\n/**\n * 浮层通用接口\n */\nexport class Layer {\n/**\n * @param {?} _componentFactoryResolver\n * @param {?} _appRef\n * @param {?} _injector\n * @param {?} _ngZone\n */\nconstructor(\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _appRef: ApplicationRef,\nprivate _injector: Injector,\nprivate _ngZone: NgZone) {\n\n    }\n/**\n * Creates the DOM element for an overlay and appends it to the document.\n * @return {?} Newly-created pane element\n */\nprivate _createDivElement(): HTMLElement {\n        const /** @type {?} */ div: HTMLDivElement = document.createElement('div');\n        div.id = `weui-overlay-${nextUniqueId++}`;\n        div.classList.add('weui-overlay-pane');\n        document.body.appendChild(div);\n\n        return div;\n    }\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nprivate _createCompInstance<T>(component: Type<T>): ComponentRef<T> {\n        const /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(component);\n        const /** @type {?} */ componentRef: ComponentRef<T> = componentFactory.create(this._injector);\n        this._appRef.attachView(componentRef.hostView);\n\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        const /** @type {?} */ _hostDomElement = this._createDivElement();\n        _hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n\n        return componentRef;\n    }\n/**\n * @return {?}\n */\nprivate _createDialog(): WeUIDialog {\n        const /** @type {?} */ componentRef = this._createCompInstance(WeUIDialog);\n        componentRef.instance.close.subscribe(() => {\n            componentRef.destroy();\n        });\n        return componentRef.instance;\n    }\n/**\n * 显示Success\n * \n * @param {?} message  消息\n * @param {?=} title    标题(可选)\n * @return {?}\n */\npublic success(message: string, title?: string): Promise<any> {\n        return this.showAlert(message, title, 'success');\n    }\n/**\n * 显示Info\n * \n * @param {?} message  消息\n * @param {?=} title    标题(可选)\n * @return {?}\n */\npublic info(message: string, title?: string): Promise<any> {\n        return this.showAlert(message, title, 'info');\n    }\n/**\n * 显示Error\n * \n * @param {?} message  消息\n * @param {?=} title    标题(可选)\n * @return {?}\n */\npublic error(message: string, title?: string): Promise<any> {\n        return this.showAlert(message, title, 'error');\n    }\n/**\n * 显示Warning\n * \n * @param {?} message  消息\n * @param {?=} title    标题(可选)\n * @return {?}\n */\npublic warning(message: string, title?: string): Promise<any> {\n        return this.showAlert(message, title, 'warning');\n    }\n/**\n * 显示Alert\n * \n * @param {?} message  消息\n * @param {?=} title    标题(可选)\n * @param {?=} type     告警等级\n * @return {?}\n */\npublic showAlert(message: string | DialogProps, title?: string, type?: string): Promise<any> {\n        const /** @type {?} */ dialog: WeUIDialog = this._createDialog();\n        dialog.showNOButton = false;\n        if (typeof message === 'object') {\n            for (const /** @type {?} */ key in message) {\n                if (message.hasOwnProperty(key) && typeof message[key] !== 'undefined') {\n                    dialog[key] = message[key];\n                }\n            }\n        } else {\n            dialog.content = message;\n            dialog.title = title || '';\n            dialog.type = type || null;\n        }\n        return dialog.show();\n    }\n/**\n * 显示Confirm，默认带两个按钮（取消、确定）\n * \n * @param {?} message  消息，或者自定义对话框属性对象\n * @param {?=} title    标题\n * @return {?}\n */\npublic showConfirm(message: string | DialogProps, title?: string): Promise<any> {\n        const /** @type {?} */ dialog: WeUIDialog = this._createDialog();\n\n        if (typeof message === 'object') {\n            for (const /** @type {?} */ key in message) {\n                if (message.hasOwnProperty(key) && typeof message[key] !== 'undefined') {\n                    dialog[key] = message[key];\n                }\n            }\n        } else {\n            dialog.content = message;\n            dialog.title = title || '';\n        }\n\n        return dialog.show();\n    }\n/**\n * @return {?}\n */\nprivate _createToast(): WeUIToast {\n        const /** @type {?} */ componentRef = this._createCompInstance(WeUIToast);\n        componentRef.instance.close.subscribe(() => {\n            componentRef.destroy();\n        });\n        return componentRef.instance;\n    }\n/**\n * 显示Loading Toast\n * \n * @param {?=} message  消息，默认为“数据加载中”\n * @return {?}\n */\npublic showLoading(message?: string): WeUIToast {\n        const /** @type {?} */ toast: WeUIToast = this._createToast();\n        if (message) {\n            toast.content = message;\n        }\n        toast.success = !(toast.loading = true);\n        toast.show();\n        return toast;\n    }\n/**\n * 显示成功Success Toast\n * \n * @param {?=} message  消息，默认为“操作成功”\n * @return {?}\n */\npublic showSuccess(message?: string): WeUIToast {\n        const /** @type {?} */ toast: WeUIToast = this._createToast();\n        if (message) {\n            toast.content = message;\n        }\n        toast.loading = !(toast.success = true);\n        toast.show();\n        return toast;\n    }\n/**\n * 在顶部显示错误消息\n * \n * @param {?} message  错误消息\n * @return {?}\n */\npublic showError(message: string): void {\n        const /** @type {?} */ componentRef = this._createCompInstance(WeUITopTips);\n        componentRef.instance.close.subscribe(() => {\n            componentRef.destroy();\n        });\n\n        const /** @type {?} */ tip: WeUITopTips = componentRef.instance;\n        if (message) {\n            tip.content = message;\n        }\n        tip.show();\n    }\n/**\n * @return {?}\n */\nprivate _createActionSheet(): WeUIActionSheet {\n        const /** @type {?} */ componentRef = this._createCompInstance(WeUIActionSheet);\n        componentRef.instance.close.subscribe(() => {\n            componentRef.destroy();\n        });\n        return componentRef.instance;\n    }\n/**\n * 显示ActionSheet菜单\n * \n * @param {?} menus\n * @param {?=} btnCancelText 取消按钮文本，默认为“取消”\n * @return {?}\n */\npublic showActionsheet(menus: { text?: string, [key: string]: any }[], btnCancelText?: string): Promise<any> {\n        const /** @type {?} */ actionsheet: WeUIActionSheet = this._createActionSheet();\n        actionsheet.menu = menus;\n        if (btnCancelText) {\n            actionsheet.cancelText = btnCancelText;\n        }\n        return actionsheet.show();\n    }\n/**\n * Gets the root HTMLElement for an instantiated component.\n * @param {?} componentRef\n * @return {?}\n */\nprivate _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\n        return /** @type {?} */(( ( /** @type {?} */((componentRef.hostView as EmbeddedViewRef<any>))).rootNodes[0] as HTMLElement));\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: ApplicationRef, },\n{type: Injector, },\n{type: NgZone, },\n];\n}\n\nfunction Layer_tsickle_Closure_declarations() {\n/** @type {?} */\nLayer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayer.ctorParameters;\n/** @type {?} */\nLayer.prototype._componentFactoryResolver;\n/** @type {?} */\nLayer.prototype._appRef;\n/** @type {?} */\nLayer.prototype._injector;\n/** @type {?} */\nLayer.prototype._ngZone;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n/**\n * TopTips - 顶部提示\n */\nexport class WeUITopTips {\n/**\n * 内容\n */\ncontent: string;\n/**\n * 隐藏对象\n */\nclose = new EventEmitter<any>();\n/**\n * 样式控制\n * @return {?}\n */\nget display(): string {\n        return this.shown ? 'block' : 'none';\n    }\n/**\n * 已显示否\n */\nprivate shown = false;\nconstructor() {\n\n    }\n/**\n * 显示\n * @return {?}\n */\nshow(): void {\n        this.shown = true;\n        setTimeout(() => { this.hide(); }, 2000);\n    }\n/**\n * 隐藏\n * @return {?}\n */\nhide(): void {\n        this.shown = false;\n        this.close.emit();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-toptips',\n    template: '<div class=\"weui-toptips weui-toptips_warn\" [ngStyle]=\"{display: display}\">{{content}}</div>'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: Input },],\n'close': [{ type: Output },],\n};\n}\n\nfunction WeUITopTips_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUITopTips.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUITopTips.ctorParameters;\n/** @type {?} */\nWeUITopTips.propDecorators;\n/**\n * 内容\n * @type {?}\n */\nWeUITopTips.prototype.content;\n/**\n * 隐藏对象\n * @type {?}\n */\nWeUITopTips.prototype.close;\n/**\n * 已显示否\n * @type {?}\n */\nWeUITopTips.prototype.shown;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input, Output, EventEmitter, HostBinding, OnChanges } from '@angular/core';\nimport { SimpleChange, SimpleChanges, Renderer2, ElementRef } from '@angular/core';\n/**\n * Toast - 弹出式提示\n */\nexport class WeUIToast implements OnChanges {\n/**\n * \\@i18n\n */\ndefaults: any = {\n        loadingText: '数据加载中',\n        successText: '操作成功'\n    };\n/**\n * 内容\n */\ncontent: string;\n/**\n * 状态，取值：loading, success\n */\nstatus: string;\n/**\n * 状态：正在加载\n */\nloading = false;\n/**\n * 状态：操作成功\n */\nsuccess = true;\n/**\n * 隐藏对象\n */\nclose = new EventEmitter<any>();\n/**\n * 样式控制\n * @return {?}\n */\nget hideCls(): boolean {\n        return !this.shown;\n    }\n/**\n * 已显示否\n */\nprivate shown = false;\n/**\n * @param {?} renderer\n * @param {?} elementRef\n */\nconstructor(\nprivate renderer: Renderer2,\nprivate elementRef: ElementRef) {\n\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        const /** @type {?} */ status: SimpleChange = changes['status'];\n        if (status) {\n            if (status.currentValue === 'loading') {\n                this.success = !(this.loading = true);\n            }\n            if (status.currentValue === 'success') {\n                this.loading = !(this.success = true);\n            }\n        }\n    }\n/**\n * 显示\n * @return {?}\n */\nshow(): void {\n        this.shown = true;\n        if (this.success) {\n            setTimeout(() => { this.hide(); }, 2000);\n        }\n    }\n/**\n * 隐藏\n * @return {?}\n */\nhide(): void {\n        this.shown = false;\n        this.close.emit();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-toast',\n    template: `\n        <div class=\"weui-mask_transparent\"></div>\n        <div class=\"weui-toast\">\n            <i class=\"weui-icon-success-no-circle weui-icon_toast\" *ngIf=\"success\"></i>\n            <p class=\"weui-toast__content\" *ngIf=\"success\">{{ content || defaults.successText}}</p>\n            <i class=\"weui-loading weui-icon_toast\" *ngIf=\"loading\"></i>\n            <p class=\"weui-toast__content\" *ngIf=\"loading\">{{ content || defaults.loadingText}}</p>\n        </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: Input },],\n'status': [{ type: Input },],\n'loading': [{ type: Input },],\n'success': [{ type: Input },],\n'close': [{ type: Output },],\n'hideCls': [{ type: HostBinding, args: ['class.weui-hide', ] },],\n};\n}\n\nfunction WeUIToast_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIToast.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIToast.ctorParameters;\n/** @type {?} */\nWeUIToast.propDecorators;\n/**\n * \\@i18n\n * @type {?}\n */\nWeUIToast.prototype.defaults;\n/**\n * 内容\n * @type {?}\n */\nWeUIToast.prototype.content;\n/**\n * 状态，取值：loading, success\n * @type {?}\n */\nWeUIToast.prototype.status;\n/**\n * 状态：正在加载\n * @type {?}\n */\nWeUIToast.prototype.loading;\n/**\n * 状态：操作成功\n * @type {?}\n */\nWeUIToast.prototype.success;\n/**\n * 隐藏对象\n * @type {?}\n */\nWeUIToast.prototype.close;\n/**\n * 已显示否\n * @type {?}\n */\nWeUIToast.prototype.shown;\n/** @type {?} */\nWeUIToast.prototype.renderer;\n/** @type {?} */\nWeUIToast.prototype.elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input, Output, HostBinding, EventEmitter } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/core';\nexport class WeUIDialog {\n/**\n * \\@i18n\n */\ndefaults: any = {\n       btnNOText: '取消',\n       btnOKText: '确定'\n    };\n/**\n * ActionSheet弹出模式，取值：ios(Ios模式) - 从底部上弹，md(Android模式) - 弹出在窗口中间。默认为ios。\n */\nmode = 'ios';\n/**\n * 标题\n */\ntitle: string;\n/**\n * 内容\n */\ncontent: string;\n/**\n * 类型，可选：info, success, error, warning, default\n */\ntype: string | null;\n/**\n * 自定义图标\n */\nicon: string;\n/**\n * 自定义图标样式\n */\niconCls: string;\n/**\n * \\@i18n 取消\n */\nbtnNOText: string = this.defaults.btnNOText;\n/**\n * \\@i18n 确定\n */\nbtnOKText: string = this.defaults.btnOKText;\n/**\n * 是否显示“取消”按钮\n */\nshowNOButton = true;\n/**\n * 隐藏对象\n */\nclose = new EventEmitter<any>();\n/**\n * 用于控制动画的触发(trigger)\n * @return {?}\n */\nget visibility(): string {\n        return this.shown ? 'show' : 'hide';\n    }\n/**\n * 已显示否\n */\nprivate shown = false;\n/**\n * 用户操作反馈\n */\nprivate resolve: (value?: any) => void;\n/**\n * 用户操作反馈\n */\nprivate reject: (value?: any) => void;\nconstructor() {\n\n    }\n/**\n * 显示对话框\n * @return {?}\n */\nshow(): Promise<any> {\n        this.shown = true;\n\n        return new Promise<any>((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n/**\n * 隐藏对话框\n * @return {?}\n */\nhide(): void {\n        this.shown = false;\n        this.close.emit();\n    }\n/**\n * 点击【取消】，执行Promise.reject()方法；然后，关闭对话框\n * @param {?} event\n * @return {?}\n */\nnegativeClick(event: MouseEvent): void {\n        this.reject();\n        this.hide();\n    }\n/**\n * 点击【确定】，执行Promise.resolve()方法；然后，关闭对话框\n * @param {?} event\n * @return {?}\n */\npositiveClick(event: MouseEvent): void {\n        this.resolve();\n        this.hide();\n    }\n/**\n * @return {?}\n */\ngetIcon(): string | null {\n        if (this.icon) {\n            return this.icon;\n        }\n        if (this.type) {\n            return ({\n                info: 'weui-icon-info',\n                success: 'weui-icon-success',\n                error: 'weui-icon-cancel',\n                warning: 'weui-icon-warn',\n                confirm: 'weui-icon-waiting',\n                'default': 'weui-icon-info-circle',\n            })[this.type];\n        }\n        return null;\n    }\n/**\n * @return {?}\n */\ngetIconClass(): any {\n        const /** @type {?} */ icon = this.getIcon();\n        return {\n            [`weui-dialog-icon`]: 1,\n            [`weui-dialog-icon-${this.type}`]: this.type,\n            [`${icon}`]: icon,\n            [`${this.iconCls}`]: this.iconCls\n        };\n    }\n/**\n * @return {?}\n */\ngetWrapperClass(): any {\n        return {\n            [`weui-dialog__wrapper`]: 1,\n            [`weui-dialog__wrapper_with_icon`]: this.getIcon(),\n        };\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-dialog',\n    template: `\n        <div class=\"weui-mask\"></div>\n        <div class=\"weui-dialog\" [ngClass]=\"{'weui-skin_android': mode == 'md'}\">\n            <div [ngClass]=\"getWrapperClass()\">\n                <i [ngClass]=\"getIconClass()\" *ngIf=\"getIcon()\"></i>\n                <div class=\"weui-dialog__wrapper_inner\">\n                    <div class=\"weui-dialog__hd\"><strong class=\"weui-dialog__title\">{{title}}</strong></div>\n                    <div class=\"weui-dialog__bd\">\n                        {{content}}\n                    </div>\n                </div>\n            </div>\n            <div class=\"weui-dialog__ft\">\n                <a href=\"javascript:;\" (click)=\"negativeClick($event)\" *ngIf=\"showNOButton\"\n                    class=\"weui-dialog__btn weui-dialog__btn_default\">{{btnNOText || defaults.btnNOText}}</a>\n                <a href=\"javascript:;\" (click)=\"positiveClick($event)\"\n                    class=\"weui-dialog__btn weui-dialog__btn_primary\">{{btnOKText || defaults.btnOKText}}</a>\n            </div>\n        </div>\n    `,\n    animations: [trigger('visibility', [\n        state('show', style({ opacity: 1, display: 'block' })),\n        state('hide', style({ opacity: 0, display: 'none' })),\n        transition('hide <=> show', [animate(200)])\n    ])]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'mode': [{ type: Input },],\n'title': [{ type: Input },],\n'content': [{ type: Input },],\n'type': [{ type: Input },],\n'icon': [{ type: Input },],\n'iconCls': [{ type: Input },],\n'btnNOText': [{ type: Input },],\n'btnOKText': [{ type: Input },],\n'showNOButton': [{ type: Input },],\n'close': [{ type: Output },],\n'visibility': [{ type: HostBinding, args: ['@visibility', ] },],\n};\n}\n\nfunction WeUIDialog_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIDialog.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIDialog.ctorParameters;\n/** @type {?} */\nWeUIDialog.propDecorators;\n/**\n * \\@i18n\n * @type {?}\n */\nWeUIDialog.prototype.defaults;\n/**\n * ActionSheet弹出模式，取值：ios(Ios模式) - 从底部上弹，md(Android模式) - 弹出在窗口中间。默认为ios。\n * @type {?}\n */\nWeUIDialog.prototype.mode;\n/**\n * 标题\n * @type {?}\n */\nWeUIDialog.prototype.title;\n/**\n * 内容\n * @type {?}\n */\nWeUIDialog.prototype.content;\n/**\n * 类型，可选：info, success, error, warning, default\n * @type {?}\n */\nWeUIDialog.prototype.type;\n/**\n * 自定义图标\n * @type {?}\n */\nWeUIDialog.prototype.icon;\n/**\n * 自定义图标样式\n * @type {?}\n */\nWeUIDialog.prototype.iconCls;\n/**\n * \\@i18n 取消\n * @type {?}\n */\nWeUIDialog.prototype.btnNOText;\n/**\n * \\@i18n 确定\n * @type {?}\n */\nWeUIDialog.prototype.btnOKText;\n/**\n * 是否显示“取消”按钮\n * @type {?}\n */\nWeUIDialog.prototype.showNOButton;\n/**\n * 隐藏对象\n * @type {?}\n */\nWeUIDialog.prototype.close;\n/**\n * 已显示否\n * @type {?}\n */\nWeUIDialog.prototype.shown;\n/**\n * 用户操作反馈\n * @type {?}\n */\nWeUIDialog.prototype.resolve;\n/**\n * 用户操作反馈\n * @type {?}\n */\nWeUIDialog.prototype.reject;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input, Output, HostBinding, EventEmitter } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/core';\nexport class WeUIActionSheet {\n/**\n * \\@i18n\n */\ndefaults: any = {\n        cancelText: '取消'\n    };\n/**\n * ActionSheet菜单，列表，内容任意，其中<code>text</code>用于显示\n */\nmenu: { text?: string, [key: string]: any }[] = [];\n/**\n * ActionSheet弹出模式，取值：ios(Ios模式) - 从底部上弹，md(Android模式) - 弹出在窗口中间。默认为ios。\n */\nmode = 'ios';\n/**\n * \\@i18n 取消\n */\ncancelText: string = this.defaults.cancelText;\n/**\n * 隐藏对象\n */\nclose = new EventEmitter<any>();\n/**\n * 安卓模式下的特殊样式\n * @return {?}\n */\nget androidCls(): boolean {\n        return this.mode === 'md';\n    }\n/**\n * 用于控制控件的可视化\n * @return {?}\n */\nget hideCls(): boolean {\n        return !this._show;\n    }\n/**\n * 用于控制动画的触发(trigger)\n * @return {?}\n */\nget visibility(): string {\n        return this.shown ? 'show' : 'hide';\n    }\n/**\n * 已显示否\n */\npublic shown = false;\npublic _show = false;\n/**\n * 用户操作反馈\n */\nprivate resolve: (value?: any) => void;\nconstructor() {\n\n    }\n/**\n * 显示菜单\n * @return {?}\n */\nshow(): Promise<any> {\n        this._show = true;\n        setTimeout(() => { // 解决transition动画与display冲突的问题\n            this.shown = true;\n        }, 10);\n\n        return new Promise<any>((resolve, reject) => {\n            this.resolve = resolve;\n        });\n    }\n/**\n * 隐藏菜单\n * @return {?}\n */\nhide(): void {\n        this.shown = false;\n        setTimeout(() => {\n            this._show = false;\n            this.close.emit();\n        }, 200);\n    }\n/**\n * 选择某个菜单，执行Promise.resolve()方法，并将选中的menu作为参数；最后，关闭ActionSheet\n * \n * @param {?} menu 被选择的菜单\n * @return {?}\n */\nonSelect(menu: { text?: string, [key: string]: any }): void {\n        this.resolve(menu);\n        this.hide();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-actionsheet',\n    template: `\n        <div class=\"weui-mask\" [@visibility]=\"visibility\" (click)=\"hide()\"></div>\n        <div class=\"weui-actionsheet\"\n            [ngClass]=\"{'weui-actionsheet_toggle': shown && mode == 'ios'}\">\n            <div class=\"weui-actionsheet__menu\">\n                <div class=\"weui-actionsheet__cell\" *ngFor=\"let m of menu\" (click)=\"onSelect(m)\">{{m.text}}</div>\n            </div>\n            <div class=\"weui-actionsheet__action\" *ngIf=\"mode == 'ios'\">\n                <div class=\"weui-actionsheet__cell\" (click)=\"hide()\">{{cancelText}}</div>\n            </div>\n        </div>\n    `,\n    animations: [trigger('visibility', [\n        state('show', style({ opacity: 1 })),\n        state('hide', style({ opacity: 0 })),\n        transition('hide <=> show', [animate(200)])\n    ])]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menu': [{ type: Input },],\n'mode': [{ type: Input },],\n'cancelText': [{ type: Input },],\n'close': [{ type: Output },],\n'androidCls': [{ type: HostBinding, args: ['class.weui-skin_android', ] },],\n'hideCls': [{ type: HostBinding, args: ['class.weui-hide', ] },],\n};\n}\n\nfunction WeUIActionSheet_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIActionSheet.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIActionSheet.ctorParameters;\n/** @type {?} */\nWeUIActionSheet.propDecorators;\n/**\n * \\@i18n\n * @type {?}\n */\nWeUIActionSheet.prototype.defaults;\n/**\n * ActionSheet菜单，列表，内容任意，其中<code>text</code>用于显示\n * @type {?}\n */\nWeUIActionSheet.prototype.menu;\n/**\n * ActionSheet弹出模式，取值：ios(Ios模式) - 从底部上弹，md(Android模式) - 弹出在窗口中间。默认为ios。\n * @type {?}\n */\nWeUIActionSheet.prototype.mode;\n/**\n * \\@i18n 取消\n * @type {?}\n */\nWeUIActionSheet.prototype.cancelText;\n/**\n * 隐藏对象\n * @type {?}\n */\nWeUIActionSheet.prototype.close;\n/**\n * 已显示否\n * @type {?}\n */\nWeUIActionSheet.prototype.shown;\n/** @type {?} */\nWeUIActionSheet.prototype._show;\n/**\n * 用户操作反馈\n * @type {?}\n */\nWeUIActionSheet.prototype.resolve;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Renderer2, ElementRef, ViewChild, forwardRef } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { WeUIGallery } from '../gallery/weui.gallery';\n/**\n * 文件信息\n */\nexport class WeUIFile {\n/**\n * 所选文件\n */\nfile?: File;\n/**\n * 文件URL\n */\nfileURL?: any;\n/**\n * 此文件的上传进度\n */\nprogress = 0;\n/**\n * 错误消息\n */\nerror: string | Error | null;\n/**\n * 是否正在上传\n */\nisUploading = false;\n/**\n * 是否已经上传\n */\nisUploaded = false;\n/**\n * 是否存在错误\n * @return {?}\n */\nhasError(): boolean {\n        return !!this.error;\n    }\n/**\n * @return {?}\n */\nhasMessage(): boolean {\n        return this.hasError() || (this.progress > 0 && this.progress < 100);\n    }\n/**\n * 重置状态<br>\n * 上传进度设置为0，错误消息为null，isUploading和isUploaded均设置为false。\n * @return {?}\n */\nreset(): void {\n        this.progress = 0;\n        this.error = null;\n        this.isUploading = false;\n        this.isUploaded = false;\n    }\n/**\n * @param {?} file\n * @param {?=} fileURL\n */\nconstructor(file: File, fileURL?: any) {\n        this.file = file;\n        this.fileURL = fileURL;\n    }\n}\n\nfunction WeUIFile_tsickle_Closure_declarations() {\n/**\n * 所选文件\n * @type {?}\n */\nWeUIFile.prototype.file;\n/**\n * 文件URL\n * @type {?}\n */\nWeUIFile.prototype.fileURL;\n/**\n * 此文件的上传进度\n * @type {?}\n */\nWeUIFile.prototype.progress;\n/**\n * 错误消息\n * @type {?}\n */\nWeUIFile.prototype.error;\n/**\n * 是否正在上传\n * @type {?}\n */\nWeUIFile.prototype.isUploading;\n/**\n * 是否已经上传\n * @type {?}\n */\nWeUIFile.prototype.isUploaded;\n}\n\nexport class WeUIUploader {\n/**\n * 图片预览控件\n */\ngallery: WeUIGallery;\npublic files: WeUIFile[] = [];\n/**\n * 预览时用\n */\npublic image: WeUIFile;\n/**\n * @param {?} renderer\n * @param {?} elementRef\n * @param {?} sanitizer\n */\nconstructor(\nprivate renderer: Renderer2,\nprivate elementRef: ElementRef,\nprivate sanitizer: DomSanitizer) {\n\n    }\n/**\n * 获取列表中的文件\n * @return {?}\n */\ngetFiles(): WeUIFile[] {\n        return this.files;\n    }\n/**\n * 文件总数\n * @return {?}\n */\ngetFileCount(): number {\n        return this.files.length;\n    }\n/**\n * 已上传文件数\n * @return {?}\n */\ngetUploadedFileCount(): number {\n        return this.files.filter((file: WeUIFile) => file.isUploaded).length;\n    }\n/**\n * 选择图片文件\n * @param {?} event\n * @return {?}\n */\nonSelect(event: Event): void {\n        const /** @type {?} */ picker = /** @type {?} */(( event.target as HTMLInputElement));\n        const /** @type {?} */ files = picker && picker.files;\n        if (!files) {\n            return;\n        }\n\n        const /** @type {?} */ length = files.length;\n        for (let /** @type {?} */ i = 0; i < length; i++) {\n            const /** @type {?} */ file: File = files.item(i);\n            const /** @type {?} */ url: string = 'url(' + window.URL.createObjectURL(file) + ')';\n            const /** @type {?} */ safeUrl = this.sanitizer.bypassSecurityTrustStyle(url);\n            this.files.push(new WeUIFile(file, safeUrl));\n        }\n    }\n/**\n * 预览图片\n * @param {?} file\n * @return {?}\n */\npreview(file: WeUIFile): void {\n        this.image = file;\n        if (this.gallery) {\n            this.gallery.show();\n        }\n    }\n/**\n * 退出预览\n * @return {?}\n */\nfadeOut(): void {\n        if (this.gallery) {\n            this.gallery.hide();\n        }\n    }\n/**\n * 删除文件\n * @param {?} file\n * @return {?}\n */\nonDelete(file: WeUIFile): void {\n        const /** @type {?} */ index = this.files.indexOf(file);\n        if (index >= 0) {\n            this.files.splice(index, 1);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-uploader',\n    template: `\n        <div class=\"weui-uploader\">\n            <div class=\"weui-uploader__hd\">\n                <p class=\"weui-uploader__title\">图片上传</p>\n                <div class=\"weui-uploader__info\">{{getUploadedFileCount()}}/{{getFileCount()}}</div>\n            </div>\n            <div class=\"weui-uploader__bd\">\n                <ul class=\"weui-uploader__files\">\n                    <li class=\"weui-uploader__file\" *ngFor=\"let file of files\"\n                        [style.background-image]=\"file.fileURL\"\n                        [ngClass]=\"{'weui-uploader__file_status': file.hasMessage()}\"\n                        (click)=\"preview(file)\">\n                        <div class=\"weui-uploader__file-content\" *ngIf=\"file.hasMessage()\">\n                            <div class=\"weui-uploader__file-progress\"\n                                *ngIf=\"file.isUploading && file.progress && !file.hasError()\">{{file.progress}}%</div>\n                            <i class=\"weui-icon-warn\" *ngIf=\"file.hasError()\"></i>\n                        </div>\n                    </li>\n                </ul>\n                <div class=\"weui-uploader__input-box\">\n                    <input class=\"weui-uploader__input\" type=\"file\" accept=\"image/*\" multiple (change)=\"onSelect($event)\" />\n                </div>\n            </div>\n        </div>\n        <weui-gallery [image]=\"image\" [canDelete]=\"true\" (delete)=\"onDelete($event)\" (click)=\"fadeOut()\"></weui-gallery>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: DomSanitizer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'gallery': [{ type: ViewChild, args: [forwardRef(() => WeUIGallery), ] },],\n};\n}\n\nfunction WeUIUploader_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIUploader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIUploader.ctorParameters;\n/** @type {?} */\nWeUIUploader.propDecorators;\n/**\n * 图片预览控件\n * @type {?}\n */\nWeUIUploader.prototype.gallery;\n/** @type {?} */\nWeUIUploader.prototype.files;\n/**\n * 预览时用\n * @type {?}\n */\nWeUIUploader.prototype.image;\n/** @type {?} */\nWeUIUploader.prototype.renderer;\n/** @type {?} */\nWeUIUploader.prototype.elementRef;\n/** @type {?} */\nWeUIUploader.prototype.sanitizer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, HostBinding } from '@angular/core';\nexport class WeUITitle {\n/**\n * 设置基本样式\n */\n_cls_title = true;\nconstructor() {\n\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-title',\n    template: `<ng-content></ng-content>`\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_cls_title': [{ type: HostBinding, args: ['class.weui-cells__title', ] },],\n};\n}\n\nfunction WeUITitle_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUITitle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUITitle.ctorParameters;\n/** @type {?} */\nWeUITitle.propDecorators;\n/**\n * 设置基本样式\n * @type {?}\n */\nWeUITitle.prototype._cls_title;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, HostBinding } from '@angular/core';\nexport class WeUITips {\n/**\n * 设置基本样式\n */\n_cls_tips = true;\nconstructor() {\n\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-tips',\n    template: `<ng-content></ng-content>`\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_cls_tips': [{ type: HostBinding, args: ['class.weui-cells__tips', ] },],\n};\n}\n\nfunction WeUITips_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUITips.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUITips.ctorParameters;\n/** @type {?} */\nWeUITips.propDecorators;\n/**\n * 设置基本样式\n * @type {?}\n */\nWeUITips.prototype._cls_tips;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input, Output, EventEmitter, HostBinding, AfterViewInit, ContentChildren, QueryList } from '@angular/core';\n\nimport { WeUITabBarItem } from './weui.tabbar.item';\nexport class WeUITabBar implements AfterViewInit {\n/**\n * 初始激活的子对象\n */\nactiveIndex = 0;\n/**\n * 设置基本样式\n */\nbarCls = true;\n/**\n * 内部子对象\n */\nitems: QueryList<WeUITabBarItem>;\n/**\n * 激活事件\n */\nactivated = new EventEmitter<WeUITabBarItem>();\nprivate _activated: any;\nconstructor() {\n\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        setTimeout(() => {\n            this.activateAt(this.activeIndex);\n        }, 1);\n    }\n/**\n * @param {?} index\n * @return {?}\n */\ngetAt(index: number): WeUITabBarItem {\n        return /** @type {?} */(( this.items.find((item: WeUITabBarItem, i: number) => i === index) as WeUITabBarItem));\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nactivate(item: any): void {\n        this._activated = item;\n        this.items.forEach(child => {\n            child.activated(child === item);\n        });\n\n        this.activated.emit(item);\n    }\n/**\n * @param {?} index\n * @return {?}\n */\nactivateAt(index: number): void {\n        const /** @type {?} */ item = this.getAt(index);\n        if (item) {\n            this.activate(item);\n        }\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nisActivated(item: WeUITabBarItem): boolean {\n        return item.isActivated();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-tabbar',\n    template: `<ng-content></ng-content>`\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'activeIndex': [{ type: Input },],\n'barCls': [{ type: HostBinding, args: ['class.weui-tabbar', ] },],\n'items': [{ type: ContentChildren, args: [WeUITabBarItem, ] },],\n'activated': [{ type: Output },],\n};\n}\n\nfunction WeUITabBar_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUITabBar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUITabBar.ctorParameters;\n/** @type {?} */\nWeUITabBar.propDecorators;\n/**\n * 初始激活的子对象\n * @type {?}\n */\nWeUITabBar.prototype.activeIndex;\n/**\n * 设置基本样式\n * @type {?}\n */\nWeUITabBar.prototype.barCls;\n/**\n * 内部子对象\n * @type {?}\n */\nWeUITabBar.prototype.items;\n/**\n * 激活事件\n * @type {?}\n */\nWeUITabBar.prototype.activated;\n/** @type {?} */\nWeUITabBar.prototype._activated;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Directive, Input, Host, HostBinding, HostListener, Optional } from '@angular/core';\nimport { Inject, forwardRef } from '@angular/core';\n\nimport { WeUITabBar } from './weui.tabbar';\nexport class WeUITabBarItem {\n/**\n * 任意值，当激活时传递给父级控件\n */\nvalue: any;\n/**\n * 设置基本样式\n */\nbarItemCls = true;\n/**\n * 设置激活样式\n * @return {?}\n */\nget activatedCls(): boolean {\n        return this._activated;\n    }\nprivate _activated = false;\n/**\n * 点击触发激活\n * \n * @param {?} event 点击事件\n * @return {?}\n */\nonClick(event: Event): void {\n        if (this.tabbar) {\n            this.tabbar.activate(this);\n        }\n    }\n/**\n * @param {?} tabbar\n */\nconstructor(\nprivate tabbar: WeUITabBar) {\n\n    }\n/**\n * 由父级控件传入\n * \n * @param {?} activated 激活状态\n * @return {?}\n */\nactivated(activated: boolean): void {\n        this._activated = activated;\n    }\n/**\n * @return {?}\n */\nisActivated(): boolean {\n        return this._activated;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    // tslint:disable-next-line:directive-selector\n    selector: 'weui-tabbar-item,[weui-tabbar-item]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: WeUITabBar, decorators: [{ type: Optional }, { type: Host }, { type: Inject, args: [forwardRef(() => WeUITabBar), ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'barItemCls': [{ type: HostBinding, args: ['class.weui-tabbar__item', ] },],\n'activatedCls': [{ type: HostBinding, args: ['class.weui-bar__item_on', ] },],\n'onClick': [{ type: HostListener, args: ['click', ['$event'], ] },],\n};\n}\n\nfunction WeUITabBarItem_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUITabBarItem.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUITabBarItem.ctorParameters;\n/** @type {?} */\nWeUITabBarItem.propDecorators;\n/**\n * 任意值，当激活时传递给父级控件\n * @type {?}\n */\nWeUITabBarItem.prototype.value;\n/**\n * 设置基本样式\n * @type {?}\n */\nWeUITabBarItem.prototype.barItemCls;\n/** @type {?} */\nWeUITabBarItem.prototype._activated;\n/** @type {?} */\nWeUITabBarItem.prototype.tabbar;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, HostBinding, Renderer2, ElementRef, forwardRef, Optional, Inject } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, COMPOSITION_BUFFER_MODE } from '@angular/forms';\n\nimport { WeUIFormControl } from './weui.form.control';\n\n\nconst /** @type {?} */ WEUI_FORM_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => WeUISwitch),\n    multi: true\n};\nexport class WeUISwitch extends WeUIFormControl {\n/**\n * 是否已选中\n */\npublic checked = false;\n/**\n * The value of the input ngModel。 (view -> model)\n * @param {?} checked\n * @return {?}\n */\nset innerValue(checked: boolean) {\n        if (this._value !== checked) {\n            this._value = checked || false;\n            // view -> model -> outside world (ie. NgModel on this control)\n            this.onChange(this._value ? this.value : '');\n        }\n    }\n/**\n * Write a new value to the element. (From ControlValueAccessor interface)\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        this.checked = this.value === value;\n        super.writeValue(this.checked);\n    }\n/**\n * 基本样式\n */\n_cls_cell_switch = true;\n/**\n * @param {?} renderer\n * @param {?} elementRef\n * @param {?} compositionMode\n */\nconstructor(\nprivate renderer: Renderer2,\nprivate elementRef: ElementRef,\nprivate compositionMode: boolean) {\n        super(renderer, elementRef, compositionMode);\n        this.value = 'on'; // default value\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-switch',\n    template: `\n        <div class=\"weui-cell__bd\">\n            {{label}}<ng-content select=\"label\"></ng-content>\n        </div>\n        <div class=\"weui-cell__ft\">\n            <label [for]=\"id\" class=\"weui-switch-cp\">\n                <input type=\"checkbox\" class=\"weui-switch-cp__input\"\n                    [attr.id]=\"id\" [attr.name]=\"name\" [value]=\"value\" [checked]=\"checked\" [(ngModel)]=\"innerValue\" />\n                <div class=\"weui-switch-cp__box\"></div>\n            </label>\n        </div>\n    `,\n    providers: [WEUI_FORM_CONTROL_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_cls_cell_switch': [{ type: HostBinding, args: ['class.weui-cell_switch', ] },],\n};\n}\n\nfunction WeUISwitch_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUISwitch.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUISwitch.ctorParameters;\n/** @type {?} */\nWeUISwitch.propDecorators;\n/**\n * 是否已选中\n * @type {?}\n */\nWeUISwitch.prototype.checked;\n/**\n * 基本样式\n * @type {?}\n */\nWeUISwitch.prototype._cls_cell_switch;\n/** @type {?} */\nWeUISwitch.prototype.renderer;\n/** @type {?} */\nWeUISwitch.prototype.elementRef;\n/** @type {?} */\nWeUISwitch.prototype.compositionMode;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input, Renderer2, ElementRef, ViewChild, forwardRef, Optional, Inject } from '@angular/core';\nimport { DefaultValueAccessor, NG_VALUE_ACCESSOR, COMPOSITION_BUFFER_MODE } from '@angular/forms';\n\n\nconst /** @type {?} */ WEUI_FORM_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => WeUISlider),\n    multi: true\n};\nexport class WeUISlider extends DefaultValueAccessor {\n/**\n * 颜色，取值：default、primary、warn等。默认为default。<br>\n * 自定义的颜色名称与色值，可以定义在 工程根目录/src/theme/variables.scss 文件中的 $colors 对象。\n */\ncolor = 'default';\n/**\n * 显示值（在最后）\n */\nshowValue = true;\n/**\n * 禁用样式\n */\ndisabled = false;\n/**\n * 最小值\n */\nmin = 0;\n/**\n * 最大值\n */\nmax = 100;\n\n    // 内部组件\n     sliderInner: ElementRef;\n/**\n * 取值\n */\npublic value = 0;\n/**\n * 滑动比例（取值：0-100）\n */\npublic percent = 0;\nprivate totalLen: number;\nprivate start: number;\nprivate startX: number;\n/**\n * @param {?} renderer\n * @param {?} elementRef\n * @param {?} compositionMode\n */\nconstructor(\nprivate renderer: Renderer2,\nprivate elementRef: ElementRef,\nprivate compositionMode: boolean) {\n        super(renderer, elementRef, compositionMode);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonTouchStart(event: TouchEvent): void {\n        if (this.disabled) {\n            return;\n        }\n\n        this.totalLen = this.sliderInner.nativeElement.clientWidth;\n        this.start = this.percent * this.totalLen / 100;\n        this.startX = event.targetTouches[0].clientX;\n        this.onTouched();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonTouchMove(event: TouchEvent): void {\n        if (this.disabled) {\n            return;\n        }\n\n        const /** @type {?} */ dist = event.targetTouches[0].clientX - this.startX;\n        let /** @type {?} */ end = this.start + dist;\n        end = end < 0 ? 0 : end > this.totalLen ? this.totalLen : end;\n        this.percent = end * 100 / this.totalLen;\n        this.value = Math.round(this.min + (this.max - this.min) * this.percent / 100);\n\n        event.preventDefault();\n        this.onChange(this.value);\n    }\n/**\n * Write a new value to the element. (From ControlValueAccessor interface)\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: number): void {\n        if (value !== undefined && value !== null) {\n            value = Math.min(Math.max(value, this.min), this.max);\n            this.value = value;\n            this.percent = (value + this.min) * 100 / this.max;\n        }\n    }\n/**\n * 设置禁用状态 (From ControlValueAccessor interface)\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-slider',\n    template: `\n        <div class=\"weui-slider-box weui-slider_{{color}}\">\n            <ng-content select=\"[weui-start]\"></ng-content>\n            <div class=\"weui-slider\">\n                <div #sliderInner class=\"weui-slider__inner\">\n                    <div [style.width]=\"percent + '%'\" class=\"weui-slider__track\"></div>\n                    <div [style.left]=\"percent + '%'\" class=\"weui-slider__handler\"\n                        (touchstart)=\"onTouchStart($event)\" (touchmove)=\"onTouchMove($event)\"></div>\n                </div>\n            </div>\n            <ng-content select=\"[weui-last]\"></ng-content>\n            <div class=\"weui-slider-box__value\" *ngIf=\"showValue\">{{value}}</div>\n        </div>\n    `,\n    providers: [WEUI_FORM_CONTROL_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'color': [{ type: Input },],\n'showValue': [{ type: Input },],\n'disabled': [{ type: Input },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'sliderInner': [{ type: ViewChild, args: ['sliderInner', ] },],\n};\n}\n\nfunction WeUISlider_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUISlider.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUISlider.ctorParameters;\n/** @type {?} */\nWeUISlider.propDecorators;\n/**\n * 颜色，取值：default、primary、warn等。默认为default。<br>\n * 自定义的颜色名称与色值，可以定义在 工程根目录/src/theme/variables.scss 文件中的 $colors 对象。\n * @type {?}\n */\nWeUISlider.prototype.color;\n/**\n * 显示值（在最后）\n * @type {?}\n */\nWeUISlider.prototype.showValue;\n/**\n * 禁用样式\n * @type {?}\n */\nWeUISlider.prototype.disabled;\n/**\n * 最小值\n * @type {?}\n */\nWeUISlider.prototype.min;\n/**\n * 最大值\n * @type {?}\n */\nWeUISlider.prototype.max;\n/** @type {?} */\nWeUISlider.prototype.sliderInner;\n/**\n * 取值\n * @type {?}\n */\nWeUISlider.prototype.value;\n/**\n * 滑动比例（取值：0-100）\n * @type {?}\n */\nWeUISlider.prototype.percent;\n/** @type {?} */\nWeUISlider.prototype.totalLen;\n/** @type {?} */\nWeUISlider.prototype.start;\n/** @type {?} */\nWeUISlider.prototype.startX;\n/** @type {?} */\nWeUISlider.prototype.renderer;\n/** @type {?} */\nWeUISlider.prototype.elementRef;\n/** @type {?} */\nWeUISlider.prototype.compositionMode;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Directive, Host, Renderer2, ElementRef, Optional, AfterViewInit } from '@angular/core';\nimport { WeUIItem } from '../list/weui.item';\nexport class WeUISelect implements AfterViewInit {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n * @param {?} _container\n */\nconstructor(\nprivate _renderer: Renderer2,\nprivate _elementRef: ElementRef,\nprivate _container: WeUIItem) {\n\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        if (!this._container) {\n            return;\n        }\n\n        const /** @type {?} */ nativeEl = /** @type {?} */(( this._elementRef.nativeElement as HTMLElement));\n        this._renderer.addClass(nativeEl, 'weui-select');\n        this._container.addClass('weui-cell_select');\n\n        const /** @type {?} */ parentEl = nativeEl.parentElement;\n        if (parentEl && parentEl.classList.contains('weui-cell__hd')) {\n            this._container.addClass('weui-cell_select-before');\n        }\n        if (parentEl && parentEl.classList.contains('weui-cell__bd')) {\n            this._container.addClass('weui-cell_select-after');\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    // tslint:disable-next-line:directive-selector\n    selector: 'select'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: WeUIItem, decorators: [{ type: Optional }, { type: Host }, ]},\n];\n}\n\nfunction WeUISelect_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUISelect.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUISelect.ctorParameters;\n/** @type {?} */\nWeUISelect.prototype._renderer;\n/** @type {?} */\nWeUISelect.prototype._elementRef;\n/** @type {?} */\nWeUISelect.prototype._container;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input, Output, EventEmitter, OnInit, OnDestroy, ElementRef, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nexport class WeUISearchBar implements OnInit, OnDestroy {\n/**\n * \\@i18n\n */\ndefaults: any = {\n        cancelText: '取消',\n        searchText: '搜索'\n    };\n/**\n * 是否必填\n */\nrequired = true;\n/**\n * \\@i18n \n * placeholder 规定帮助用户填写输入字段的提示。\n */\nplaceholder: string = this.defaults.searchText;\n/**\n * \\@i18n 取消\n */\ncancelText: string = this.defaults.cancelText;\n/**\n * 输入事件\n */\nsearch = new EventEmitter<string>();\n\n    // 输入控件\n     searchBox: ElementRef;\npublic focusing = false;\npublic value = '';\nprivate searchTerms = new Subject<string>();\nprivate _searchTermsChangesSubscription: Subscription;\nconstructor() {\n\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        this._searchTermsChangesSubscription = this.searchTerms\n            .pipe(\n                debounceTime(300),     // wait for 300ms pause in events\n                distinctUntilChanged() // ignore if next search term is same as previous\n            )\n            .subscribe((term: string) => {\n                this.search.emit(term);\n            });\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        if (this._searchTermsChangesSubscription) {\n            this._searchTermsChangesSubscription.unsubscribe();\n        }\n    }\n/**\n * @return {?}\n */\ndoFocus(): void {\n        this.searchBox.nativeElement.focus();\n    }\n/**\n * @return {?}\n */\nonFocus(): void {\n        this.focusing = true;\n    }\n/**\n * @return {?}\n */\nonBlur(): void {\n        if (!this.value.length) {\n            this.focusing = false;\n        }\n    }\n/**\n * @return {?}\n */\nonCancel(): void {\n        this.value = '';\n        this.onBlur();\n        this.search.emit('');\n    }\n/**\n * @param {?} term\n * @return {?}\n */\npush(term: string): void {\n        this.searchTerms.next(term);\n    }\n/**\n * @return {?}\n */\nclear(): void {\n        this.value = '';\n        this.doFocus();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-searchbar',\n    template: `\n        <div class=\"weui-search-bar\" [ngClass]=\"{'weui-search-bar_focusing': focusing}\">\n            <form class=\"weui-search-bar__form\">\n                <div class=\"weui-search-bar__box\">\n                    <i class=\"weui-icon-search\"></i>\n                    <input #searchBox type=\"search\" name=\"search\" class=\"weui-search-bar__input\"\n                        [placeholder]=\"placeholder\" [required]=\"required\"\n                        (focus)=\"onFocus()\" (blur)=\"onBlur()\" [(ngModel)]=\"value\" (keyup)=\"push(searchBox.value)\" />\n                    <a href=\"javascript:\" class=\"weui-icon-clear\" (click)=\"clear()\"></a>\n                </div>\n                <label class=\"weui-search-bar__label\" (click)=\"doFocus()\">\n                    <i class=\"weui-icon-search\"></i>\n                    <span>{{placeholder}}</span>\n                </label>\n            </form>\n            <a href=\"javascript:\" class=\"weui-search-bar__cancel-btn\" (click)=\"onCancel()\">{{cancelText}}</a>\n        </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'required': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'cancelText': [{ type: Input },],\n'search': [{ type: Output },],\n'searchBox': [{ type: ViewChild, args: ['searchBox', ] },],\n};\n}\n\nfunction WeUISearchBar_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUISearchBar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUISearchBar.ctorParameters;\n/** @type {?} */\nWeUISearchBar.propDecorators;\n/**\n * \\@i18n\n * @type {?}\n */\nWeUISearchBar.prototype.defaults;\n/**\n * 是否必填\n * @type {?}\n */\nWeUISearchBar.prototype.required;\n/**\n * \\@i18n \n * placeholder 规定帮助用户填写输入字段的提示。\n * @type {?}\n */\nWeUISearchBar.prototype.placeholder;\n/**\n * \\@i18n 取消\n * @type {?}\n */\nWeUISearchBar.prototype.cancelText;\n/**\n * 输入事件\n * @type {?}\n */\nWeUISearchBar.prototype.search;\n/** @type {?} */\nWeUISearchBar.prototype.searchBox;\n/** @type {?} */\nWeUISearchBar.prototype.focusing;\n/** @type {?} */\nWeUISearchBar.prototype.value;\n/** @type {?} */\nWeUISearchBar.prototype.searchTerms;\n/** @type {?} */\nWeUISearchBar.prototype._searchTermsChangesSubscription;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, HostBinding, Renderer2, ElementRef, forwardRef, Optional, Inject } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, COMPOSITION_BUFFER_MODE } from '@angular/forms';\n\nimport { WeUIFormControl } from './weui.form.control';\n\n\nconst /** @type {?} */ WEUI_FORM_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => WeUIRadio),\n    multi: true\n};\nexport class WeUIRadio extends WeUIFormControl {\n/**\n * 基本样式\n */\n_cls_check_label = true;\n/**\n * @param {?} renderer\n * @param {?} elementRef\n * @param {?} compositionMode\n */\nconstructor(\nprivate renderer: Renderer2,\nprivate elementRef: ElementRef,\nprivate compositionMode: boolean) {\n        super(renderer, elementRef, compositionMode);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-radio',\n    providers: [WEUI_FORM_CONTROL_VALUE_ACCESSOR],\n    template: `\n        <label class=\"weui-check__label\" [for]=\"id\" (click)=\"onTouched()\">\n            <div class=\"weui-cell__bd\">\n                {{label}}<ng-content></ng-content>\n            </div>\n            <div class=\"weui-cell__ft\">\n                <input type=\"radio\" class=\"weui-check\"\n                    [attr.id]=\"id\" [attr.name]=\"name\" [value]=\"value\"\n                    [disabled]=\"disabled\" [(ngModel)]=\"innerValue\">\n                <span class=\"weui-icon-checked\"></span>\n            </div>\n        </label>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_cls_check_label': [{ type: HostBinding, args: ['class.weui-check__label', ] },],\n};\n}\n\nfunction WeUIRadio_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIRadio.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIRadio.ctorParameters;\n/** @type {?} */\nWeUIRadio.propDecorators;\n/**\n * 基本样式\n * @type {?}\n */\nWeUIRadio.prototype._cls_check_label;\n/** @type {?} */\nWeUIRadio.prototype.renderer;\n/** @type {?} */\nWeUIRadio.prototype.elementRef;\n/** @type {?} */\nWeUIRadio.prototype.compositionMode;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nexport class WeUIProgressBar {\n/**\n * 颜色，取值：default、primary、warn等。默认为default。<br>\n * 自定义的颜色名称与色值，可以定义在 工程根目录/src/theme/variables.scss 文件中的 $colors 对象。\n */\ncolor = 'default';\n/**\n * Value of the progressbar. Defaults to zero.\n */\nvalue = 0;\n/**\n * 是否可终止 (若为true，则显示关闭按钮)\n */\ncanTerminate = true;\n/**\n * 终止事件\n */\nterminate = new EventEmitter<WeUIProgressBar>();\nconstructor() {\n\n    }\n/**\n * @return {?}\n */\nonTerminate(): void {\n        this.terminate.emit(this);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-progress-bar',\n    template: `\n        <div class=\"weui-progress weui-progress_{{color}}\">\n            <div class=\"weui-progress__bar\">\n                <div class=\"weui-progress__inner-bar\" [style.width]=\"value + '%'\"></div>\n            </div>\n            <a href=\"javascript:;\" class=\"weui-progress__opr\" *ngIf=\"canTerminate\" (click)=\"onTerminate()\">\n                <i class=\"weui-icon-cancel\"></i>\n            </a>\n        </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'color': [{ type: Input },],\n'value': [{ type: Input },],\n'canTerminate': [{ type: Input },],\n'terminate': [{ type: Output },],\n};\n}\n\nfunction WeUIProgressBar_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIProgressBar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIProgressBar.ctorParameters;\n/** @type {?} */\nWeUIProgressBar.propDecorators;\n/**\n * 颜色，取值：default、primary、warn等。默认为default。<br>\n * 自定义的颜色名称与色值，可以定义在 工程根目录/src/theme/variables.scss 文件中的 $colors 对象。\n * @type {?}\n */\nWeUIProgressBar.prototype.color;\n/**\n * Value of the progressbar. Defaults to zero.\n * @type {?}\n */\nWeUIProgressBar.prototype.value;\n/**\n * 是否可终止 (若为true，则显示关闭按钮)\n * @type {?}\n */\nWeUIProgressBar.prototype.canTerminate;\n/**\n * 终止事件\n * @type {?}\n */\nWeUIProgressBar.prototype.terminate;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input, Output, EventEmitter, HostBinding, AfterViewInit, ContentChildren, QueryList } from '@angular/core';\nimport { WeUINavBarItem } from './weui.navbar.item';\nexport class WeUINavBar implements AfterViewInit {\n/**\n * 初始激活的子对象\n */\nactiveIndex = 0;\n/**\n * 设置基本样式\n */\nbarCls = true;\n/**\n * 内部子对象\n */\nitems: QueryList<WeUINavBarItem>;\n/**\n * 激活事件\n */\nactivated = new EventEmitter<WeUINavBarItem>();\nprivate _activated: any;\nconstructor() {\n\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        this.activateAt(this.activeIndex);\n    }\n/**\n * @param {?} index\n * @return {?}\n */\ngetAt(index: number): WeUINavBarItem {\n        return /** @type {?} */(( this.items.find((item: WeUINavBarItem, i: number) => i === index) as WeUINavBarItem));\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nactivate(item: any): void {\n        this._activated = item;\n        this.items.forEach(child => {\n            child.activated(child === item);\n        });\n\n        this.activated.emit(item);\n    }\n/**\n * @param {?} index\n * @return {?}\n */\nactivateAt(index: number): void {\n        const /** @type {?} */ item = this.getAt(index);\n        if (item) {\n            this.activate(item);\n        }\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nisActivated(item: WeUINavBarItem): boolean {\n        return item.isActivated();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-navbar',\n    template: `<ng-content></ng-content>`\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'activeIndex': [{ type: Input },],\n'barCls': [{ type: HostBinding, args: ['class.weui-navbar', ] },],\n'items': [{ type: ContentChildren, args: [WeUINavBarItem, ] },],\n'activated': [{ type: Output },],\n};\n}\n\nfunction WeUINavBar_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUINavBar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUINavBar.ctorParameters;\n/** @type {?} */\nWeUINavBar.propDecorators;\n/**\n * 初始激活的子对象\n * @type {?}\n */\nWeUINavBar.prototype.activeIndex;\n/**\n * 设置基本样式\n * @type {?}\n */\nWeUINavBar.prototype.barCls;\n/**\n * 内部子对象\n * @type {?}\n */\nWeUINavBar.prototype.items;\n/**\n * 激活事件\n * @type {?}\n */\nWeUINavBar.prototype.activated;\n/** @type {?} */\nWeUINavBar.prototype._activated;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Directive, Host, Input, HostBinding, HostListener, Optional } from '@angular/core';\nimport { Inject, forwardRef } from '@angular/core';\n\nimport { WeUINavBar } from './weui.navbar';\nexport class WeUINavBarItem {\n/**\n * 任意值，当激活时传递给父级控件\n */\nvalue: any;\n/**\n * 设置基本样式\n */\nbarItemCls = true;\n/**\n * 设置激活样式\n * @return {?}\n */\nget activatedCls(): boolean {\n        return this._activated;\n    }\nprivate _activated = false;\n/**\n * 点击触发激活\n * \n * @param {?} event 点击事件\n * @return {?}\n */\nonClick(event: Event): void {\n        if (this.navbar) {\n            this.navbar.activate(this);\n        }\n    }\n/**\n * @param {?} navbar\n */\nconstructor(\nprivate navbar: WeUINavBar) {\n\n    }\n/**\n * 由父级控件传入\n * \n * @param {?} activated 激活状态\n * @return {?}\n */\nactivated(activated: boolean): void {\n        this._activated = activated;\n    }\n/**\n * @return {?}\n */\nisActivated(): boolean {\n        return this._activated;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    // tslint:disable-next-line:directive-selector\n    selector: 'weui-navbar-item,[weui-navbar-item]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: WeUINavBar, decorators: [{ type: Optional }, { type: Host }, { type: Inject, args: [forwardRef(() => WeUINavBar), ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'barItemCls': [{ type: HostBinding, args: ['class.weui-navbar__item', ] },],\n'activatedCls': [{ type: HostBinding, args: ['class.weui-bar__item_on', ] },],\n'onClick': [{ type: HostListener, args: ['click', ['$event'], ] },],\n};\n}\n\nfunction WeUINavBarItem_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUINavBarItem.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUINavBarItem.ctorParameters;\n/** @type {?} */\nWeUINavBarItem.propDecorators;\n/**\n * 任意值，当激活时传递给父级控件\n * @type {?}\n */\nWeUINavBarItem.prototype.value;\n/**\n * 设置基本样式\n * @type {?}\n */\nWeUINavBarItem.prototype.barItemCls;\n/** @type {?} */\nWeUINavBarItem.prototype._activated;\n/** @type {?} */\nWeUINavBarItem.prototype.navbar;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input } from '@angular/core';\n/**\n * 加载更多\n */\nexport class WeUILoadmore {\n/**\n * 分割线\n */\nline: any;\n/**\n * 点\n */\ndot: any;\n/**\n * 正在加载\n */\nloading = false;\nconstructor() {\n\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-loadmore',\n    template: `\n        <div class=\"weui-loadmore\" [ngClass]=\"{\n                'weui-loadmore_line': line !== undefined && line !== null,\n                'weui-loadmore_dot': dot !== undefined && dot !== null }\">\n            <i class=\"weui-loading\" *ngIf=\"loading\"></i>\n            <span class=\"weui-loadmore__tips\"><ng-content></ng-content></span>\n        </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'line': [{ type: Input },],\n'dot': [{ type: Input },],\n'loading': [{ type: Input },],\n};\n}\n\nfunction WeUILoadmore_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUILoadmore.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUILoadmore.ctorParameters;\n/** @type {?} */\nWeUILoadmore.propDecorators;\n/**\n * 分割线\n * @type {?}\n */\nWeUILoadmore.prototype.line;\n/**\n * 点\n * @type {?}\n */\nWeUILoadmore.prototype.dot;\n/**\n * 正在加载\n * @type {?}\n */\nWeUILoadmore.prototype.loading;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Renderer2, ElementRef, Input, HostBinding, OnChanges, SimpleChanges } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nexport class WeUILink implements OnChanges {\n/**\n * 不显示最右边的箭头。默认为false，即：显示箭头。\n */\nnoPushArrow = false;\n/**\n * 样式\n */\nbaseCls: string;\n/**\n * 链接\n * @param {?} _href\n * @return {?}\n */\nset href(_href: string) {\n        this._href = this.sanitizer.bypassSecurityTrustUrl(_href);\n    }\n\n    _href: SafeUrl;\n\n     _cls_cell = true;\n     _cls_item = true;\n     _cls_cell_access = true;\n/**\n * @return {?}\n */\nget _cls_cell_access_noarrow() {\n        return this.noPushArrow;\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        const /** @type {?} */ changed = changes['baseCls'];\n        if (changed) {\n            const /** @type {?} */ _el = /** @type {?} */(( this._elementRef.nativeElement as HTMLElement));\n            if (changed.previousValue) {\n                _el.classList.remove(`weui-cell_${changed.previousValue}`);\n            }\n            if (changed.currentValue) {\n                _el.classList.add(`weui-cell_${changed.currentValue}`);\n            }\n        }\n    }\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n * @param {?} sanitizer\n */\nconstructor(\nprivate _renderer: Renderer2,\nprivate _elementRef: ElementRef,\nprivate sanitizer: DomSanitizer) {\n\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-link',\n    template: `\n        <a class=\"weui-cell_access\" [href]=\"_href\">\n            <div class=\"weui-cell__hd\">\n                <ng-content select=\"[weui-start]\"></ng-content>\n            </div>\n            <div class=\"weui-cell__bd\">\n                <ng-content select=\"[weui-content]\"></ng-content>\n                <ng-content></ng-content>\n            </div>\n            <div class=\"weui-cell__ft\">\n                <ng-content select=\"[weui-last]\"></ng-content>\n            </div>\n        </a>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: DomSanitizer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'noPushArrow': [{ type: Input },],\n'baseCls': [{ type: Input },],\n'href': [{ type: Input },],\n'_cls_cell': [{ type: HostBinding, args: ['class.weui-cell', ] },],\n'_cls_item': [{ type: HostBinding, args: ['class.weui-item', ] },],\n'_cls_cell_access': [{ type: HostBinding, args: ['class.weui-cell_access', ] },],\n'_cls_cell_access_noarrow': [{ type: HostBinding, args: ['class.weui-cell_access-noarrow', ] },],\n};\n}\n\nfunction WeUILink_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUILink.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUILink.ctorParameters;\n/** @type {?} */\nWeUILink.propDecorators;\n/**\n * 不显示最右边的箭头。默认为false，即：显示箭头。\n * @type {?}\n */\nWeUILink.prototype.noPushArrow;\n/**\n * 样式\n * @type {?}\n */\nWeUILink.prototype.baseCls;\n/** @type {?} */\nWeUILink.prototype._href;\n/** @type {?} */\nWeUILink.prototype._cls_cell;\n/** @type {?} */\nWeUILink.prototype._cls_item;\n/** @type {?} */\nWeUILink.prototype._cls_cell_access;\n/** @type {?} */\nWeUILink.prototype._renderer;\n/** @type {?} */\nWeUILink.prototype._elementRef;\n/** @type {?} */\nWeUILink.prototype.sanitizer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input, Renderer2, ElementRef, HostBinding, OnChanges, SimpleChanges } from '@angular/core';\nexport class WeUIItem implements OnChanges {\n/**\n * 样式\n */\nbaseCls: string;\n\n\n     _cls_cell = true;\n     _cls_item = true;\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        const /** @type {?} */ changed = changes['baseCls'];\n        if (changed) {\n            const /** @type {?} */ _el = /** @type {?} */(( this._elementRef.nativeElement as HTMLElement));\n            if (changed.previousValue) {\n                _el.classList.remove(`weui-cell_${changed.previousValue}`);\n            }\n            if (changed.currentValue) {\n                _el.classList.add(`weui-cell_${changed.currentValue}`);\n            }\n        }\n    }\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer2,\nprivate _elementRef: ElementRef) {\n\n    }\n/**\n * @param {?} cls\n * @return {?}\n */\naddClass(cls: string): void {\n        this._renderer.addClass(this._elementRef.nativeElement, cls);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-item',\n    template: `\n        <div class=\"weui-cell__hd\">\n            <ng-content select=\"[weui-start]\"></ng-content>\n        </div>\n        <div class=\"weui-cell__bd\">\n            <ng-content select=\"[weui-content]\"></ng-content>\n            <ng-content></ng-content>\n        </div>\n        <div class=\"weui-cell__ft\">\n            <ng-content select=\"[weui-last]\"></ng-content>\n        </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'baseCls': [{ type: Input },],\n'_cls_cell': [{ type: HostBinding, args: ['class.weui-cell', ] },],\n'_cls_item': [{ type: HostBinding, args: ['class.weui-item', ] },],\n};\n}\n\nfunction WeUIItem_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIItem.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIItem.ctorParameters;\n/** @type {?} */\nWeUIItem.propDecorators;\n/**\n * 样式\n * @type {?}\n */\nWeUIItem.prototype.baseCls;\n/** @type {?} */\nWeUIItem.prototype._cls_cell;\n/** @type {?} */\nWeUIItem.prototype._cls_item;\n/** @type {?} */\nWeUIItem.prototype._renderer;\n/** @type {?} */\nWeUIItem.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Renderer2, ElementRef, Input, HostBinding, OnChanges, SimpleChanges } from '@angular/core';\nexport class WeUIItems implements OnChanges {\n/**\n * 控件样式，如：<code>'form'</code>对应的样式类为<code>'weui-cells_form'</code>\n */\nbaseCls: string;\n\n     _cls_cells = true;\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        const /** @type {?} */ changed = changes['baseCls'];\n        if (changed) {\n            const /** @type {?} */ _el = /** @type {?} */(( this._elementRef.nativeElement as HTMLElement));\n            if (changed.previousValue) {\n                _el.classList.remove(`weui-cells_${changed.previousValue}`);\n            }\n            if (changed.currentValue) {\n                _el.classList.add(`weui-cells_${changed.currentValue}`);\n            }\n        }\n    }\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer2,\nprivate _elementRef: ElementRef) {\n\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-items',\n    template: `<ng-content></ng-content>`\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'baseCls': [{ type: Input },],\n'_cls_cells': [{ type: HostBinding, args: ['class.weui-cells', ] },],\n};\n}\n\nfunction WeUIItems_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIItems.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIItems.ctorParameters;\n/** @type {?} */\nWeUIItems.propDecorators;\n/**\n * 控件样式，如：<code>'form'</code>对应的样式类为<code>'weui-cells_form'</code>\n * @type {?}\n */\nWeUIItems.prototype.baseCls;\n/** @type {?} */\nWeUIItems.prototype._cls_cells;\n/** @type {?} */\nWeUIItems.prototype._renderer;\n/** @type {?} */\nWeUIItems.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input, Output, EventEmitter, Renderer2, ElementRef, HostBinding, ContentChild } from '@angular/core';\nimport { OnChanges, SimpleChanges, forwardRef, ViewEncapsulation, Optional, Inject } from '@angular/core';\nimport { NgControl, NG_VALUE_ACCESSOR, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nimport { WeUIFormControl } from './weui.form.control';\n\nconst /** @type {?} */ WEUI_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => WeUIInput),\n    multi: true\n};\nexport class WeUIInput extends WeUIFormControl implements OnChanges {\n/**\n * 控件类型：text, number, tel, email, password, date, datetime-local等\n */\ntype = 'text';\n/**\n * pattern 属性规定用于验证输入字段的模式（正则表达式）。<br>\n * 注释：pattern 属性适用于以下 <input> 类型：text, search, url, telephone, email 以及 password 。\n */\npattern: string;\n/**\n * placeholder 规定帮助用户填写输入字段的提示。<br>\n * 注释：placeholder 属性适用于以下的 <input> 类型：text, search, url, telephone, email 以及 password。\n */\nplaceholder: string;\n/**\n * maxlength 属性规定输入字段的最大长度，以字符个数计。<br>\n * 注释：maxlength 属性与 <input type=\"text\"> 或 <input type=\"password\"> 配合使用。\n */\nmaxlength: string;\n/**\n * minlength 属性规定输入字段的最小长度，以字符个数计。<br>\n * 注释：minlength 属性与 <input type=\"text\"> 或 <input type=\"password\"> 配合使用。\n */\nminlength: string;\n/**\n * max 属性规定输入字段所允许的最大值。<br>\n * 注释：max 和 min 属性适用于以下 <input> 类型：number, range, date, datetime, datetime-local, month, time 以及 week。\n */\nmax: number | Date;\n/**\n * min 属性规定输入字段所允许的最小值。<br>\n * 注释：max 和 min 属性适用于以下 <input> 类型：number, range, date, datetime, datetime-local, month, time 以及 week。\n */\nmin: number | Date;\n/**\n * 是否必填\n */\nrequired = false;\n/**\n * 是否只读\n */\nreadonly = false;\n/**\n * autocomplete 属性规定输入字段是否应该启用自动完成功能。默认为on。<br>\n * 自动完成允许浏览器预测对字段的输入。当用户在字段开始键入时，浏览器基于之前键入过的值，应该显示出在字段中填写的选项。\n */\nautocomplete = true;\n/**\n * 是否监听输入长度\n */\ncountChars = false;\n/**\n * 样式\n */\nbaseCls: string;\n/**\n * 输入域无效时显示告警图标，默认为true\n */\nshowWarnIcon = true;\n/**\n * 行数，当类型是textarea时\n */\nrows = 3;\n/**\n * \\@output {event} Expression to call when the input no longer has focus\n */\nblur: EventEmitter<Event> = new EventEmitter<Event>();\n/**\n * \\@output {event} Expression to call when the input has focus\n */\nfocus: EventEmitter<Event> = new EventEmitter<Event>();\n\n    // 实际输入控件(<input>)\n     state: NgControl;\n/**\n * @param {?} renderer\n * @param {?} elementRef\n * @param {?} compositionMode\n */\nconstructor(\nprivate renderer: Renderer2,\nprivate elementRef: ElementRef,\nprivate compositionMode: boolean) {\n        super(renderer, elementRef, compositionMode);\n    }\n/**\n * 扩展样式，如：weui-cell_example\n */\n_cls_check_label = true;\n/**\n * 扩展样式，如：weui-cell_example\n * @return {?}\n */\nget warnCls(): boolean {\n        return this.shouldWarn();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        const /** @type {?} */ changed = changes['baseCls'];\n        if (changed) {\n            const /** @type {?} */ _el = /** @type {?} */(( this.elementRef.nativeElement as HTMLElement));\n            if (changed.previousValue) {\n                _el.classList.remove(`weui-cell_${changed.previousValue}`);\n            }\n            if (changed.currentValue) {\n                _el.classList.add(`weui-cell_${changed.currentValue}`);\n            }\n        }\n    }\n/**\n * @return {?}\n */\nshouldWarn(): boolean {\n        return this.state.invalid === true &&\n            (this.state.touched === true || this.state.dirty === true);\n    }\n/**\n * @return {?}\n */\nshouldShowWarnIcon(): boolean {\n        return this.showWarnIcon && this.shouldWarn();\n    }\n/**\n * @param {?} ev\n * @return {?}\n */\nonBlur(ev: UIEvent) {\n        this.onTouched(); // set your control to 'touched'\n        this.blur.emit(ev);\n    }\n/**\n * @param {?} ev\n * @return {?}\n */\nonFocus(ev: UIEvent) {\n        this.focus.emit(ev);\n    }\n/**\n * 统计字符总长度\n * @return {?}\n */\ngetCharCount(): number {\n        return (this._value && this._value.length) || 0;\n    }\n/**\n * 当事件keyup、change时，当字数大于等于maxLength后，禁止输入\n * @param {?} event\n * @return {?}\n */\nonKeyboardEvent(event: KeyboardEvent): void {\n        const /** @type {?} */ maxLen = parseInt(this.maxlength, 10);\n        if (!isNaN(maxLen) && this.getCharCount() >= maxLen) {\n            if (event.keyCode !== 46 && event.keyCode !== 8) {\n                event.preventDefault(); // 禁止输入\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-input',\n    template: `\n        <div class=\"weui-cell__hd\">\n            {{label}}<ng-content select=\"label\"></ng-content>\n        </div>\n        <div class=\"weui-cell__bd\">\n            <div class=\"weui-input-area\" *ngIf=\"type !== 'textarea'\">\n                <input #input class=\"weui-input\" [type]=\"type\"\n                    [attr.id]=\"id\" [attr.name]=\"name\" [placeholder]=\"placeholder\"\n                    [attr.maxlength]=\"maxlength\" [attr.minlength]=\"minlength\" [pattern]=\"pattern\"\n                    [attr.max]=\"max\" [attr.min]=\"min\" [required]=\"required\" [readonly]=\"readonly\"\n                    [disabled]=\"disabled\" [autocomplete]=\"autocomplete ? 'on' : 'off'\"\n                    [(ngModel)]=\"innerValue\"\n                    (blur)=\"onBlur($event)\" (focus)=\"onFocus($event)\"\n                    (keydown)=\"onKeyboardEvent($event)\" (keyup)=\"onKeyboardEvent($event)\" />\n                <div *ngIf=\"maxlength && countChars\" class=\"weui-text-counter\">\n                    <span>{{getCharCount()}}</span>/{{maxlength}}\n                </div>\n            </div>\n\n            <div class=\"weui-input-area\" *ngIf=\"type == 'textarea'\">\n                <textarea #textarea class=\"weui-textarea\"\n                    [placeholder]=\"placeholder\" [rows]=\"rows\"\n                    [required]=\"required\" [readonly]=\"readonly\"\n                    [attr.minlength]=\"minlength\" [attr.maxlength]=\"maxlength\"\n                    [(ngModel)]=\"innerValue\"\n                    (keydown)=\"onKeyboardEvent($event)\" (keyup)=\"onKeyboardEvent($event)\"></textarea>\n                <div *ngIf=\"maxlength && countChars\" class=\"weui-textarea-counter\">\n                    <span>{{getCharCount()}}</span>/{{maxlength}}\n                </div>\n            </div>\n        </div>\n        <div class=\"weui-cell__ft\">\n            <ng-content select=\"[weui-last]\"></ng-content>\n            <i class=\"weui-icon-warn\" *ngIf=\"shouldShowWarnIcon()\"></i>\n        </div>\n    `,\n    providers: [WEUI_INPUT_CONTROL_VALUE_ACCESSOR],\n    encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'type': [{ type: Input },],\n'pattern': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'maxlength': [{ type: Input },],\n'minlength': [{ type: Input },],\n'max': [{ type: Input },],\n'min': [{ type: Input },],\n'required': [{ type: Input },],\n'readonly': [{ type: Input },],\n'autocomplete': [{ type: Input },],\n'countChars': [{ type: Input },],\n'baseCls': [{ type: Input },],\n'showWarnIcon': [{ type: Input },],\n'rows': [{ type: Input },],\n'blur': [{ type: Output },],\n'focus': [{ type: Output },],\n'state': [{ type: ContentChild, args: [NgControl, ] },],\n'_cls_check_label': [{ type: HostBinding, args: ['class.weui-check__label', ] },],\n'warnCls': [{ type: HostBinding, args: ['class.weui-cell_warn', ] },],\n};\n}\n\nfunction WeUIInput_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIInput.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIInput.ctorParameters;\n/** @type {?} */\nWeUIInput.propDecorators;\n/**\n * 控件类型：text, number, tel, email, password, date, datetime-local等\n * @type {?}\n */\nWeUIInput.prototype.type;\n/**\n * pattern 属性规定用于验证输入字段的模式（正则表达式）。<br>\n * 注释：pattern 属性适用于以下 <input> 类型：text, search, url, telephone, email 以及 password 。\n * @type {?}\n */\nWeUIInput.prototype.pattern;\n/**\n * placeholder 规定帮助用户填写输入字段的提示。<br>\n * 注释：placeholder 属性适用于以下的 <input> 类型：text, search, url, telephone, email 以及 password。\n * @type {?}\n */\nWeUIInput.prototype.placeholder;\n/**\n * maxlength 属性规定输入字段的最大长度，以字符个数计。<br>\n * 注释：maxlength 属性与 <input type=\"text\"> 或 <input type=\"password\"> 配合使用。\n * @type {?}\n */\nWeUIInput.prototype.maxlength;\n/**\n * minlength 属性规定输入字段的最小长度，以字符个数计。<br>\n * 注释：minlength 属性与 <input type=\"text\"> 或 <input type=\"password\"> 配合使用。\n * @type {?}\n */\nWeUIInput.prototype.minlength;\n/**\n * max 属性规定输入字段所允许的最大值。<br>\n * 注释：max 和 min 属性适用于以下 <input> 类型：number, range, date, datetime, datetime-local, month, time 以及 week。\n * @type {?}\n */\nWeUIInput.prototype.max;\n/**\n * min 属性规定输入字段所允许的最小值。<br>\n * 注释：max 和 min 属性适用于以下 <input> 类型：number, range, date, datetime, datetime-local, month, time 以及 week。\n * @type {?}\n */\nWeUIInput.prototype.min;\n/**\n * 是否必填\n * @type {?}\n */\nWeUIInput.prototype.required;\n/**\n * 是否只读\n * @type {?}\n */\nWeUIInput.prototype.readonly;\n/**\n * autocomplete 属性规定输入字段是否应该启用自动完成功能。默认为on。<br>\n * 自动完成允许浏览器预测对字段的输入。当用户在字段开始键入时，浏览器基于之前键入过的值，应该显示出在字段中填写的选项。\n * @type {?}\n */\nWeUIInput.prototype.autocomplete;\n/**\n * 是否监听输入长度\n * @type {?}\n */\nWeUIInput.prototype.countChars;\n/**\n * 样式\n * @type {?}\n */\nWeUIInput.prototype.baseCls;\n/**\n * 输入域无效时显示告警图标，默认为true\n * @type {?}\n */\nWeUIInput.prototype.showWarnIcon;\n/**\n * 行数，当类型是textarea时\n * @type {?}\n */\nWeUIInput.prototype.rows;\n/**\n * \\@output {event} Expression to call when the input no longer has focus\n * @type {?}\n */\nWeUIInput.prototype.blur;\n/**\n * \\@output {event} Expression to call when the input has focus\n * @type {?}\n */\nWeUIInput.prototype.focus;\n/** @type {?} */\nWeUIInput.prototype.state;\n/**\n * 扩展样式，如：weui-cell_example\n * @type {?}\n */\nWeUIInput.prototype._cls_check_label;\n/** @type {?} */\nWeUIInput.prototype.renderer;\n/** @type {?} */\nWeUIInput.prototype.elementRef;\n/** @type {?} */\nWeUIInput.prototype.compositionMode;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { WeUIFile } from '../uploader/weui.uploader';\nexport class WeUIGallery {\n/**\n * 背景图片，如：url(./images/pic_160.png)\n */\nimage: WeUIFile;\n/**\n * 是否显示删除按钮\n */\ncanDelete = true;\n/**\n * 删除事件\n */\ndelete = new EventEmitter<WeUIFile>();\n/**\n * 已显示否\n */\npublic shown = false;\npublic _show = false;\nconstructor() {\n\n    }\n/**\n * 删除照片\n * @param {?} event\n * @return {?}\n */\ndeleteImage(event: Event): void {\n        this.delete.emit(this.image);\n        event.preventDefault();\n    }\n/**\n * 显示图片\n * @return {?}\n */\nshow(): void {\n        this._show = true;\n        setTimeout(() => { // 解决transition动画与display冲突的问题\n            this.shown = true;\n        }, 10);\n    }\n/**\n * 隐藏图片\n * @return {?}\n */\nhide(): void {\n        this.shown = false;\n        setTimeout(() => {\n            this._show = false;\n        }, 200);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-gallery',\n    template: `\n        <div class=\"weui-gallery weui-transition-opacity\" [ngClass]=\"{'weui-block': _show, 'weui-fadeIn': shown}\">\n            <span class=\"weui-gallery__img\" [style.background-image]=\"image?.fileURL\"></span>\n            <div class=\"weui-gallery__opr\" *ngIf=\"canDelete\">\n                <a href=\"javascript:;\" class=\"weui-gallery__del\" (click)=\"deleteImage($event)\">\n                    <i class=\"weui-icon-delete weui-icon_gallery-delete\"></i>\n                </a>\n            </div>\n        </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'image': [{ type: Input },],\n'canDelete': [{ type: Input },],\n'delete': [{ type: Output },],\n};\n}\n\nfunction WeUIGallery_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIGallery.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIGallery.ctorParameters;\n/** @type {?} */\nWeUIGallery.propDecorators;\n/**\n * 背景图片，如：url(./images/pic_160.png)\n * @type {?}\n */\nWeUIGallery.prototype.image;\n/**\n * 是否显示删除按钮\n * @type {?}\n */\nWeUIGallery.prototype.canDelete;\n/**\n * 删除事件\n * @type {?}\n */\nWeUIGallery.prototype.delete;\n/**\n * 已显示否\n * @type {?}\n */\nWeUIGallery.prototype.shown;\n/** @type {?} */\nWeUIGallery.prototype._show;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input, HostBinding, Renderer2, ElementRef } from '@angular/core';\nimport { Directive, Host, Optional } from '@angular/core';\n/**\n * 页脚\n */\nexport class WeUIFooter {\n/**\n * 固定在底部\n */\nfixedAtBottom = false;\n/**\n * 基本样式\n */\n_cls_footer = true;\n/**\n * 固定在底部样式\n * @return {?}\n */\nget fixedBottomCls(): boolean {\n        return this.fixedAtBottom;\n    }\nconstructor() {\n\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-footer',\n    template: '<ng-content></ng-content>'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'fixedAtBottom': [{ type: Input },],\n'_cls_footer': [{ type: HostBinding, args: ['class.weui-footer', ] },],\n'fixedBottomCls': [{ type: HostBinding, args: ['class.weui-footer_fixed-bottom', ] },],\n};\n}\n\nfunction WeUIFooter_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIFooter.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIFooter.ctorParameters;\n/** @type {?} */\nWeUIFooter.propDecorators;\n/**\n * 固定在底部\n * @type {?}\n */\nWeUIFooter.prototype.fixedAtBottom;\n/**\n * 基本样式\n * @type {?}\n */\nWeUIFooter.prototype._cls_footer;\n}\n\nexport class WeUIFooterText {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n * @param {?} _container\n */\nconstructor(\nprivate _renderer: Renderer2,\nprivate _elementRef: ElementRef,\nprivate _container: WeUIFooter) {\n        if (_container !== null) {\n            _renderer.addClass(_elementRef.nativeElement, 'weui-footer__text');\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    // tslint:disable-next-line:directive-selector\n    selector: 'weui-footer-text,[weui-footer-text]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: WeUIFooter, decorators: [{ type: Optional }, { type: Host }, ]},\n];\n}\n\nfunction WeUIFooterText_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIFooterText.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIFooterText.ctorParameters;\n/** @type {?} */\nWeUIFooterText.prototype._renderer;\n/** @type {?} */\nWeUIFooterText.prototype._elementRef;\n/** @type {?} */\nWeUIFooterText.prototype._container;\n}\n\nexport class WeUIFooterLinks {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n * @param {?} _container\n */\nconstructor(\nprivate _renderer: Renderer2,\nprivate _elementRef: ElementRef,\nprivate _container: WeUIFooter) {\n        if (_container !== null) {\n            _renderer.addClass(_elementRef.nativeElement, 'weui-footer__links');\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    // tslint:disable-next-line:directive-selector\n    selector: 'weui-footer-links,[weui-footer-links]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: WeUIFooter, decorators: [{ type: Optional }, { type: Host }, ]},\n];\n}\n\nfunction WeUIFooterLinks_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIFooterLinks.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIFooterLinks.ctorParameters;\n/** @type {?} */\nWeUIFooterLinks.prototype._renderer;\n/** @type {?} */\nWeUIFooterLinks.prototype._elementRef;\n/** @type {?} */\nWeUIFooterLinks.prototype._container;\n}\n\nexport class WeUIFooterLink {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n * @param {?} _container\n */\nconstructor(\nprivate _renderer: Renderer2,\nprivate _elementRef: ElementRef,\nprivate _container: WeUIFooterLinks) {\n        if (_container !== null) {\n            _renderer.addClass(_elementRef.nativeElement, 'weui-footer__link');\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    // tslint:disable-next-line:directive-selector\n    selector: 'a'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: WeUIFooterLinks, decorators: [{ type: Optional }, { type: Host }, ]},\n];\n}\n\nfunction WeUIFooterLink_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIFooterLink.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIFooterLink.ctorParameters;\n/** @type {?} */\nWeUIFooterLink.prototype._renderer;\n/** @type {?} */\nWeUIFooterLink.prototype._elementRef;\n/** @type {?} */\nWeUIFooterLink.prototype._container;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input, OnInit, AfterViewInit, ViewChildren, QueryList } from '@angular/core';\n\nimport { WeUIPicker, PickerOption } from './weui.picker';\nimport { WeUIPickerGroup } from './weui-picker-group';\nimport { Schedule, parse as parseCron, parseField } from './cron';\n/**\n * 求下一轮的数值\n * \n * @param {?} expr cron 表达式\n * @param {?=} year 年份\n * @param {?=} month 月份，取值范围为：1-12\n * @return {?}\n */\nfunction nexts(expr: string, year?: number, month?: number): PickerOption[] {\n    const /** @type {?} */ result: PickerOption[] = [];\n    const /** @type {?} */ atoms: string[] = expr.replace(/^\\s\\s*|\\s\\s*$/g, '').split(/\\s+/);\n\n    // (1) 根据“年” 求可用的“月”\n    if (!month) {\n        const /** @type {?} */ months: number[] = parseField(atoms[1], [1, 12]);\n        for (let /** @type {?} */ m = 1; m <= 12; m++) {\n            result.push({\n                label: m + '月',\n                value: m,\n                disabled: months.indexOf(m) === -1\n            });\n        }\n        return result;\n    }\n\n    // (2) 根据“年、月” 求可用的“日”\n    const /** @type {?} */ today = new Date();\n    const /** @type {?} */ _year = year || today.getFullYear();\n    const /** @type {?} */ maxDate = getActualMaximumDate(_year, month);\n    const /** @type {?} */ startDt = new Date(_year, month - 1, 1);\n    const /** @type {?} */ endDt = new Date(_year, month - 1, maxDate);\n    const /** @type {?} */ interval: Schedule = parseCron(expr, startDt, endDt);\n\n    const /** @type {?} */ available: number[] = [];\n    let /** @type {?} */ obj: { value: Date, done: boolean };\n    do {\n        obj = interval.next();\n        available.push(obj.value.getDate());\n    } while (!obj.done);\n\n    for (let /** @type {?} */ i = 1; i <= maxDate; i++) {\n        result.push({\n            label: i + '日',\n            value: i,\n            disabled: available.indexOf(i) === -1\n        });\n    }\n    return result;\n}\n/**\n * 根据年、月求当月的最大日期\n * \n * @param {?} year 年份\n * @param {?} month 月份，取值：1-12（1月-12月）\n * @return {?}\n */\nfunction getActualMaximumDate(year: number, month: number): number {\n    const /** @type {?} */ calendar = new Date(year, month - 1, 31);\n    while (calendar.getMonth() !== month - 1) {\n        calendar.setDate(calendar.getDate() - 1);\n    }\n    return calendar.getDate();\n}\n/**\n * 日期选择器\n */\nexport class WeUIDatePicker extends WeUIPicker implements OnInit, AfterViewInit {\n/**\n * cron 表达式，三位，分别是 dayOfMonth[1-31]，month[1-12] 和 dayOfWeek[0-6]（周日-周六）。<br>\n * 格式: 日期 月份 周。例如：* * * 或 1,2,5-9 1-6 0-6 或 1/2 * * 等。默认：* * *。\n */\ncron = '* * *';\n/**\n * 开始日期/年份。取值：<ul>\n * <li>(1)字符串：符合ISO 8601日期格式的字符串，如：2013-01-18 或者 20130118；</li>\n * <li>(2)数值：表示年份，如：2011，则默认加\"-01-01\"在年份之后 </li>\n * <li>(3)Date：JavaScript Date对象 </li>\n * </ul>\n * @param {?} start\n * @return {?}\n */\nset start(start: any) {\n        this._startDate = this._parseDate(start, '-01-01');\n    }\n/**\n * 结束日期/年份。取值：<ul>\n * <li>(1)字符串：符合ISO 8601日期格式的字符串，如：2013-01-18 或者 20130118；</li>\n * <li>(2)数值：表示年份，如：2011，则默认加\"-12-31\"在年份之后 </li>\n * <li>(3)Date：JavaScript Date对象 </li>\n * </ul>\n * @param {?} end\n * @return {?}\n */\nset end(end: any) {\n        this._endDate = this._parseDate(end, '-12-31');\n    }\nprivate _startDate: Date;\nprivate _endDate: Date;\n/**\n * 显示列表\n */\n_groups: QueryList<WeUIPickerGroup>;\n/**\n * 月份选择控件\n */\nprivate monthPicker: WeUIPickerGroup;\n/**\n * 日期选择控件\n */\nprivate datePicker: WeUIPickerGroup;\n/**\n * @param {?} value\n * @param {?} sub\n * @return {?}\n */\nprivate _parseDate(value: any, sub: string): Date {\n        if (typeof value === 'string') {\n            if (value.length === 4) {\n                value = value + sub;\n            }\n            if (/^(\\d{4})-(\\d{2})-(\\d{2})$/.test(value) || /^(\\d{4})(\\d{2})(\\d{2})$/.test(value)) {\n                return new Date(+RegExp.$1, +RegExp.$2 - 1, +RegExp.$3);\n            }\n        }\n        if (typeof value === 'number') {\n            return new Date(value + sub);\n        }\n        return value; // 默认为Date对象\n    }\nconstructor() {\n        super();\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        // 设置初始值\n        const /** @type {?} */ now = new Date();\n        const /** @type {?} */ thisYear = now.getFullYear();\n        if (!this._startDate) {\n            this.start = thisYear - 10;\n        }\n        if (!this._endDate) {\n            this.end = thisYear + 10;\n        }\n        if (this._startDate.getTime() > this._endDate.getTime()) {\n            [this._startDate, this._endDate] = [this._endDate, this._startDate];\n        }\n\n        // 年份列表\n        const /** @type {?} */ years: PickerOption[] = [];\n        const /** @type {?} */ endYear = this._endDate.getFullYear();\n        for (let /** @type {?} */ year = this._startDate.getFullYear(); year <= endYear; year++) {\n            years.push({\n                label: year + '年',\n                value: year\n            });\n        }\n\n        // 渲染数据列表\n        this.menus = [years, [], []];\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        const /** @type {?} */ monthPicker = this._groups.find((group: WeUIPickerGroup, index: number): boolean => {\n            return index === 1;\n        });\n        const /** @type {?} */ datePicker = this._groups.find((group: WeUIPickerGroup, index: number): boolean => {\n            return index === 2;\n        });\n\n        if (monthPicker) {\n            this.monthPicker = monthPicker;\n        }\n        if (datePicker) {\n            this.datePicker = datePicker;\n        }\n\n        // 更新月份、日期列表\n        this._updateMonthPickerList();\n    }\n/**\n * 选择年或月，触发子列表的变更\n * \n * @param {?} option 被选择的选项\n * @param {?} index 哪个列（索引）\n * @return {?}\n */\nonChange(option: PickerOption, index: number): void {\n        if (!option) {\n            return; // 未选择任何值，不触发子列表的变更\n        }\n        super.onChange(option, index);\n\n        // 变更“年份”时，修改月份列表；如果月份的值为2月，则也修改日期列表\n        if (index === 0) {\n            this._updateMonthPickerList();\n        }\n\n        // 变更“月份”时，修改日期列表\n        if (index === 1) {\n            this._updateDatePickerList();\n        }\n    }\n/**\n * @return {?}\n */\nprivate _updateMonthPickerList(): void {\n        if (!this.monthPicker) {\n            return;\n        }\n        if (!this.value || !this.value.length || !this.value[0]) {\n            return;\n        }\n\n        const /** @type {?} */ year: number = this.value[0].value;\n        const /** @type {?} */ months = nexts(this.cron, year);\n\n        const /** @type {?} */ options = this.monthPicker.options;\n        if (months.length !== options.length) {\n            this.monthPicker.options = months;\n            this.monthPicker.forceChange();\n        }\n\n        // 强制日期列表更新\n        this._updateDatePickerList();\n    }\n/**\n * @return {?}\n */\nprivate _updateDatePickerList(): void {\n        if (!this.datePicker) {\n            return;\n        }\n\n        const /** @type {?} */ year: number = this.value[0].value;\n        const /** @type {?} */ month: number = this.value[1].value;\n        const /** @type {?} */ dates = nexts(this.cron, year, month);\n\n        this.value[2] = null; // 清空值\n        this.datePicker.options = dates;\n        this.datePicker.forceChange();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-date-picker',\n    template: `\n        <div class=\"weui-mask\" (click)=\"onCancel()\"\n            [ngClass]=\"{'weui-animate-fade-in': shown, 'weui-animate-fade-out': !shown}\"></div>\n        <div class=\"weui-picker\"\n            [ngClass]=\"{'weui-animate-slide-up': shown, 'weui-animate-slide-down': !shown}\"\n            (animationend)=\"onAnimationEnd($event)\">\n            <div class=\"weui-picker__hd\">\n                <a href=\"javascript:;\" class=\"weui-picker__action\" (click)=\"onCancel()\">{{cancelText}}  </a>\n                <a href=\"javascript:;\" class=\"weui-picker__action\" (click)=\"onConfirm()\">{{confirmText}}</a>\n            </div>\n            <div class=\"weui-picker__bd\">\n                <weui-picker-group tappable class=\"weui-picker__group\"\n                    *ngFor=\"let options of menus; let i = index;\"\n                    [options]=\"options\" [value]=\"value[i]\" (change)=\"onChange($event, i)\"></weui-picker-group>\n            </div>\n        </div>\n    `,\n    exportAs: 'weuiDatePicker'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'cron': [{ type: Input },],\n'start': [{ type: Input },],\n'end': [{ type: Input },],\n'_groups': [{ type: ViewChildren, args: [WeUIPickerGroup, ] },],\n};\n}\n\nfunction WeUIDatePicker_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIDatePicker.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIDatePicker.ctorParameters;\n/** @type {?} */\nWeUIDatePicker.propDecorators;\n/**\n * cron 表达式，三位，分别是 dayOfMonth[1-31]，month[1-12] 和 dayOfWeek[0-6]（周日-周六）。<br>\n * 格式: 日期 月份 周。例如：* * * 或 1,2,5-9 1-6 0-6 或 1/2 * * 等。默认：* * *。\n * @type {?}\n */\nWeUIDatePicker.prototype.cron;\n/** @type {?} */\nWeUIDatePicker.prototype._startDate;\n/** @type {?} */\nWeUIDatePicker.prototype._endDate;\n/**\n * 显示列表\n * @type {?}\n */\nWeUIDatePicker.prototype._groups;\n/**\n * 月份选择控件\n * @type {?}\n */\nWeUIDatePicker.prototype.monthPicker;\n/**\n * 日期选择控件\n * @type {?}\n */\nWeUIDatePicker.prototype.datePicker;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * 支持的格式：(1) 纯数字；(2)范围: min-max；(3)叠加：mum/step\n */\nconst regex = /^(\\d+)(?:-(\\d+))?(?:\\/(\\d+))?$/g;\n/**\n * 日[1-31]、月[1-12]、周[0-6]（周日-周六）的取值范围\n */\nconst constraints = [[1, 31], [1, 12], [0, 6]];\n/**\n * Schedule\n */\nexport class Schedule {\n/**\n * days of the month\n */\nprivate _dates: number[];\n/**\n * months\n */\nprivate _months: number[];\n/**\n * days of the week\n */\nprivate _days: number[];\n/**\n * current cursor\n */\nprivate _pointer: Date;\n/**\n * 构造\n * @param {?} fields [[日..], [月..], [周..]]\n * @param {?} _start 起始日期\n * @param {?} _end   终止日期\n */\nconstructor(private fields: number[][],\nprivate _start: Date,\nprivate _end: Date) {\n        /**\n         * dayOfMonth\n         * @type {Array}\n         */\n        this._dates = fields[0];\n\n        /**\n         * month\n         * @type {Array}\n         */\n        this._months = fields[1];\n\n        /**\n         * dayOfWeek\n         * @type {Array}\n         */\n        this._days = fields[2];\n\n        /**\n         * cursor\n         * @type {Date}\n         * @private\n         */\n        this._pointer = _start;\n    }\n/**\n * @return {?}\n */\n_findNext(): Date {\n        let /** @type {?} */ next: Date;\n        while (true) {\n            if (this._end.getTime() - this._pointer.getTime() < 0) {\n                throw new Error(`out of range, end is ${this._end}, current is ${this._pointer}`);\n            }\n\n            const /** @type {?} */ month: number = this._pointer.getMonth();\n            const /** @type {?} */ date: number = this._pointer.getDate();\n            const /** @type {?} */ day: number = this._pointer.getDay();\n\n            if (this._months.indexOf(month + 1) === -1) {\n                this._pointer.setMonth(month + 1);\n                this._pointer.setDate(1);\n                continue;\n            }\n\n            if (this._dates.indexOf(date) === -1) {\n                this._pointer.setDate(date + 1);\n                continue;\n            }\n\n            if (this._days.indexOf(day) === -1) {\n                this._pointer.setDate(date + 1);\n                continue;\n            }\n\n            next = new Date(this._pointer.getTime());\n\n            break;\n        }\n        return next;\n    }\n/**\n * fetch next data\n * @return {?}\n */\nnext(): {value: Date, done: boolean} {\n        const /** @type {?} */ value: Date = this._findNext();\n        // move next date\n        this._pointer.setDate(this._pointer.getDate() + 1);\n        return {\n            value: value,\n            done: !this.hasNext()\n        };\n    }\n/**\n * has next\n * @return {?}\n */\nhasNext(): boolean {\n        try {\n            this._findNext();\n            return true;\n        } catch ( /** @type {?} */e) {\n            return false;\n        }\n    }\n}\n\nfunction Schedule_tsickle_Closure_declarations() {\n/**\n * days of the month\n * @type {?}\n */\nSchedule.prototype._dates;\n/**\n * months\n * @type {?}\n */\nSchedule.prototype._months;\n/**\n * days of the week\n * @type {?}\n */\nSchedule.prototype._days;\n/**\n * current cursor\n * @type {?}\n */\nSchedule.prototype._pointer;\n/** @type {?} */\nSchedule.prototype.fields;\n/** @type {?} */\nSchedule.prototype._start;\n/** @type {?} */\nSchedule.prototype._end;\n}\n\n/**\n * 解析表达式，并获得合法的数字的列表，如合法的月份数\n * \n * @param {?} field 日期cron表达式中通过空格分割后的某一部分(日、月、周)的内容\n * @param {?} _constraints 取值约束，如日期为[1,31]\n * @return {?} number[]\n */\nexport function parseField(field: string, _constraints: number[]): number[] {\n    const /** @type {?} */ low: number = _constraints[0];\n    const /** @type {?} */ high: number = _constraints[1];\n    const /** @type {?} */ result: number[] = [];\n\n    // * 号等于最低到最高\n    field = field.replace(/\\*/g, low + '-' + high);\n\n    // 处理 1,2,5-9 这种情况\n    const /** @type {?} */ fields: string[] = field.split(',');\n    const /** @type {?} */ len = fields.length;\n    for (let /** @type {?} */ i = 0; i < len; i++) {\n        const /** @type {?} */ f: string = fields[i];\n        if (f.match(regex)) {\n            f.replace(regex, ($0: string, _lower: string, _upper: string, _step: string): string => {\n                // ref to `cron-parser`\n                const /** @type {?} */ step: number = parseInt(_step, 10) || 1;\n                // Positive integer higher than constraints[0]\n                const /** @type {?} */ lower: number = Math.min(Math.max(low, Math.abs(+_lower)), high);\n\n                // Positive integer lower than constraints[1]\n                const /** @type {?} */ upper: number = _upper ? Math.min(high, Math.abs(+_upper)) : high;\n\n                // Count from the lower barrier to the upper\n                let /** @type {?} */ pointer: number = lower;\n\n                do {\n                    result.push(pointer);\n                    pointer += step;\n                } while (pointer <= upper);\n                return '';\n            });\n        }\n    }\n    return result;\n}\n/**\n * 解析表达式，并返回Schedule对象\n * \n * @param {?} expr  cron表达式，形如: 日期 月份 周。例如：* * * 或 1,2,5-9 1-6 0-6 或 1/2 * * 等\n * @param {?} start 开始日期\n * @param {?} end   介绍日期\n * @return {?}\n */\nexport function parse(expr: string, start: Date, end: Date): Schedule {\n    const /** @type {?} */ atoms: string[] = expr.replace(/^\\s\\s*|\\s\\s*$/g, '').split(/\\s+/);\n    const /** @type {?} */ fields: number[][] = [];\n    atoms.forEach((atom: string, index: number) => {\n        const /** @type {?} */ constraint: number[] = constraints[index];\n        fields.push(parseField(atom, constraint));\n    });\n    return new Schedule(fields, start, end);\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input, Output, EventEmitter, HostListener, AfterViewInit } from '@angular/core';\nimport { PickerOption } from './weui.picker';\n/**\n * 获取Window窗口的高度\n */\nconst getWindowHeight = (): number => {\n    return window.innerHeight;\n};\nexport class WeUIPickerGroup implements AfterViewInit {\n/**\n * 默认参数\n */\ndefaults: any = {\n        offset: 3,           // 列表初始化时的偏移量（列表初始化时，选项是聚焦在中间的，通过offset强制往上挪3项，以达到初始选项是为顶部的那项）\n        rowHeight: 34,       // 列表每一行的高度\n        bodyHeight: 7 * 34,  // picker的高度，用于辅助点击滚动的计算\n        inertiaTime: 150,    // 惯性滑动的保持时间，此值直接影响“灵敏度” (单位：ms)\n        slideDuration: 300   // 惯性滑动的动画时间，表现为最终可视化的效果\n    };\n/**\n * 当前列表组的选项\n */\noptions: PickerOption[] = [];\n/**\n * 初始值\n */\nvalue: any;\n/**\n * 修改事件\n */\nchange = new EventEmitter<any>();\nprivate startTime: number;\nprivate startY: number | null;\nprivate endY: number;\nprivate speed: number;\n/**\n * 选项滚动的距离，用于设置translate3d的Y值\n */\nprivate distance = 0;\n/**\n * @return {?}\n */\npublic get translate3d(): string {\n        return `translate3d(0, ${this.distance}px, 0)`;\n    }\n/**\n * 选项惯性滚动的时间\n */\nprivate duration = 0;\n/**\n * @return {?}\n */\npublic get transition(): string {\n        return `all ${this.duration}ms`;\n    }\nconstructor() {\n\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        setTimeout(() => {\n            this.init();\n        }, 1);\n    }\n/**\n * @return {?}\n */\nforceChange(): void {\n        this.init();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\n_start(event: TouchEvent): void {\n        this.startY = event.changedTouches[0].pageY;\n        this.startTime = +new Date();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\n_move(event: TouchEvent): void {\n        const /** @type {?} */ endTime = +new Date();\n        this.endY = event.changedTouches[0].pageY;\n\n        // 计算滑动的速度: 距离 / 时间\n        const /** @type {?} */ _distance: number = this.endY - (this.startY || 0);\n        this.speed = _distance / (endTime - this.startTime);\n\n        // 重新设置开始时间、开始位置\n        this.startTime = endTime;\n        this.startY = this.endY;\n        this.duration = 0;          // ms\n        this.distance += _distance; // 内容移动的距离\n        // console.log(`速度=${this.speed} px/ms`);\n\n        event.preventDefault();\n    }\n/**\n * @param {?} event\n * @return {?}\n */\n_end(event: TouchEvent): void {\n        if (!this.startY) {\n            return;\n        }\n        this.endY = event.changedTouches[0].pageY;\n/**\n * 思路:\n * 根据最后一次touchmove事件的速度(speed)，判断是否执行惯性滑动；\n * 如果speed大于1、小于5，则根据速度乘以惯性滑动的时间(如150ms)，计算出应该滑动的距离；\n * 如果speed大于5，则按照屏幕的高度(减去列表高度的一半)，作为该滑动的距离。\n */\nconst _speed = Math.abs(this.speed);\n        if (_speed >= 5) {\n            const /** @type {?} */ windowY = getWindowHeight() - (this.defaults.bodyHeight / 2);\n            this.stop(windowY - this.endY);\n        } else if (_speed >= 1) {\n            const /** @type {?} */ diff = this.speed * this.defaults.inertiaTime; // 滑行 150ms,这里直接影响“灵敏度”\n            this.stop(diff);\n        } else {\n            this.stop(0);\n        }\n        this.startY = null;\n    }\n/**\n * @return {?}\n */\ninit(): void {\n        let /** @type {?} */ index = 0;\n        if (this.value) { // 有传入value，则按value找可匹配的选项\n            const /** @type {?} */ len = this.options && this.options.length || 0;\n            for (; index < len; index++) {\n                const /** @type {?} */ option = this.options[index];\n                if (this.value === option.value || this.value['value'] === option.value) {\n                    this.onChange(option, index);\n                    this.distance = (this.defaults.offset - index) * this.defaults.rowHeight;\n                    return; // 已找到匹配选项，直接返回\n                }\n            }\n            console.warn('Picker has not match defaultValue:', this.value);\n        }\n\n        // 没有传入value，或者 有value但是没有匹配的选项\n        index = this._getDefaultIndex(this.options);\n        this.onChange(this.options[index], index);\n        this.distance = this._getDefaultTranslate(this.defaults.offset, this.defaults.rowHeight, this.options);\n    }\n/**\n * 当touch事件结束时，根据惯性滑动计算当前在哪个选项，以及列表滚动的最终距离\n * \n * @param {?} diff 惯性滑动的距离\n * @return {?}\n */\nstop(diff: number): void {\n        let /** @type {?} */ dist = this.distance + diff;\n\n        // 移动到最接近的那一行\n        dist = Math.round(dist / this.defaults.rowHeight) * this.defaults.rowHeight;\n        const /** @type {?} */ max = this._getMax(this.defaults.offset, this.defaults.rowHeight);\n        const /** @type {?} */ min = this._getMin(this.defaults.offset, this.defaults.rowHeight, this.options.length);\n        // console.log(`移动距离: dist=${dist}px`);\n\n        // 不要超过最大值或者最小值\n        dist = Math.max(Math.min(dist, max), min);\n\n        // 如果是 disabled 的就跳过\n        let /** @type {?} */ index = this.defaults.offset - dist / this.defaults.rowHeight;\n        while (!!this.options[index] && this.options[index].disabled) {\n            diff > 0 ? ++index : --index;\n        }\n        dist = (this.defaults.offset - index) * this.defaults.rowHeight;\n\n        this.duration = this.defaults.slideDuration;  // ms\n        this.distance = dist; // px\n\n        // 触发选择事件\n        this.onChange(this.options[index], index);\n    }\n/**\n * 选择某个选项时触发\n * \n * @param {?} option 选中的选项\n * @param {?=} index  该选项在列表中的索引\n * @return {?}\n */\nonChange(option: PickerOption, index?: number): void {\n        this.change.emit(option);\n    }\n/**\n * get max translate\n * \n * @param {?} offset\n * @param {?} rowHeight\n * @return {?}\n */\n_getMax(offset: number, rowHeight: number): number {\n        return offset * rowHeight;\n    }\n/**\n * get min translate\n * \n * @param {?} offset\n * @param {?} rowHeight\n * @param {?} length\n * @return {?}\n */\n_getMin(offset: number, rowHeight: number, length: number): number {\n        return -(rowHeight * (length - offset - 1));\n    }\n/**\n * get index of middle item\n * \n * @param {?} options\n * @return {?}\n */\n_getDefaultIndex(options: any[]): number {\n        let /** @type {?} */ current = Math.floor(options.length / 2);\n        let /** @type {?} */ count = 0;\n        while (!!options[current] && options[current].disabled) {\n            current = ++current % options.length;\n            count++;\n\n            if (count > options.length) {\n                throw new Error('No selectable item.');\n            }\n        }\n\n        return current;\n    }\n/**\n * @param {?} offset\n * @param {?} rowHeight\n * @param {?} options\n * @return {?}\n */\n_getDefaultTranslate(offset: number, rowHeight: number, options: any[]): number {\n        const /** @type {?} */ currentIndex = this._getDefaultIndex(options);\n\n        return (offset - currentIndex) * rowHeight;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-picker-group',\n    template: `\n        <div class=\"weui-picker__mask\"></div>\n        <div class=\"weui-picker__indicator\"></div>\n        <div class=\"weui-picker__content\" [ngStyle]=\"{\n                '-webkit-transform': translate3d, 'transform': translate3d,\n                '-webkit-transition': transition, 'transition': transition\n            }\">\n            <div class=\"weui-picker__item\" *ngFor=\"let option of options\"\n                [ngClass]=\"{'weui-picker__item_disabled': option.disabled}\">{{option.label}}</div>\n        </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'value': [{ type: Input },],\n'change': [{ type: Output },],\n'_start': [{ type: HostListener, args: ['touchstart', ['$event'], ] },],\n'_move': [{ type: HostListener, args: ['touchmove', ['$event'], ] },],\n'_end': [{ type: HostListener, args: ['touchend', ['$event'], ] },],\n};\n}\n\nfunction WeUIPickerGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIPickerGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIPickerGroup.ctorParameters;\n/** @type {?} */\nWeUIPickerGroup.propDecorators;\n/**\n * 默认参数\n * @type {?}\n */\nWeUIPickerGroup.prototype.defaults;\n/**\n * 当前列表组的选项\n * @type {?}\n */\nWeUIPickerGroup.prototype.options;\n/**\n * 初始值\n * @type {?}\n */\nWeUIPickerGroup.prototype.value;\n/**\n * 修改事件\n * @type {?}\n */\nWeUIPickerGroup.prototype.change;\n/** @type {?} */\nWeUIPickerGroup.prototype.startTime;\n/** @type {?} */\nWeUIPickerGroup.prototype.startY;\n/** @type {?} */\nWeUIPickerGroup.prototype.endY;\n/** @type {?} */\nWeUIPickerGroup.prototype.speed;\n/**\n * 选项滚动的距离，用于设置translate3d的Y值\n * @type {?}\n */\nWeUIPickerGroup.prototype.distance;\n/**\n * 选项惯性滚动的时间\n * @type {?}\n */\nWeUIPickerGroup.prototype.duration;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input, HostBinding, Output, EventEmitter } from '@angular/core';\n/**\n * 菜单选项\n */\nexport class PickerOption {\n/**\n * 显示文本\n */\nlabel: string;\n/**\n * 取值\n */\nvalue: any;\n/**\n * 是否已禁用\n */\ndisabled?: boolean;\n\n    /**\n     * 其它属性\n     */\n    [key: string]: any;\n}\n\nfunction PickerOption_tsickle_Closure_declarations() {\n/**\n * 显示文本\n * @type {?}\n */\nPickerOption.prototype.label;\n/**\n * 取值\n * @type {?}\n */\nPickerOption.prototype.value;\n/**\n * 是否已禁用\n * @type {?}\n */\nPickerOption.prototype.disabled;\n}\n\n/**\n * 多列选择器\n * 参考了 {\\@link https://github.com/weui/weui.js/blob/master/src/picker/picker.js}的实现\n */\nexport class WeUIPicker {\n/**\n * \\@i18n\n */\ndefaults: any = {\n        cancelText: '取消',\n        confirmText: '确定'\n    };\n/**\n * 单列菜单列表，内容任意，其中<code>label</code>用于显示，<code>value</code>表示值，<code>disabled</code>表示不可选择项。\n * @param {?} menu\n * @return {?}\n */\nset menu(menu: PickerOption[]) {\n        if (menu !== undefined && menu !== null && menu.length) {\n            this.menus = [menu];\n        }\n    };\n/**\n * 多列菜单列表，内容任意，其中<code>label</code>用于显示，<code>value</code>表示值，<code>disabled</code>表示不可选择项。<br>\n * 注意：列的个数不宜超过3个。\n */\nmenus: PickerOption[][] = [];\n/**\n * 当前选择的值（每列对应一个值）\n */\nvalue: any[] = [];\n/**\n * \\@i18n 取消\n */\ncancelText: string = this.defaults.cancelText;\n/**\n * \\@i18n 确定\n */\nconfirmText: string = this.defaults.confirmText;\n/**\n * 用于控制控件的可视化\n * @return {?}\n */\nget hideCls(): boolean {\n        return this.hidden;\n    }\n/**\n * 关闭事件\n */\nclose = new EventEmitter<any>();\n/**\n * 点击【确定】按钮时，通过Promise.resolve()输出最终值\n */\nprivate resolve: (value: any[]) => void;\n/**\n * 已显示否\n */\npublic shown = false;\n/**\n * 已显示否\n */\nprivate hidden = true;\nconstructor() {\n\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonAnimationEnd(event: AnimationEvent): void {\n        if (event.animationName === 'slideDown') {\n            this.hidden = true;\n            this.close.emit();\n        }\n    }\n/**\n * 显示菜单\n * @return {?}\n */\nshow(): Promise<any> {\n        this.hidden = false;\n        this.shown = true;\n\n        return new Promise<any>((resolve, reject) => {\n            this.resolve = resolve;\n        });\n    }\n/**\n * 隐藏菜单\n * @return {?}\n */\nhide(): void {\n        this.shown = false;\n    }\n/**\n * 某列数据修改时触发\n * \n * @param {?} option 该列数据的选择项\n * @param {?} index  该列在组内的索引\n * @return {?}\n */\nonChange(option: PickerOption, index: number): void {\n        if (option) {\n            this.value[index] = option;\n        }\n    }\n/**\n * 点击【确定】按钮时，通过Promise.resolve()输出最终值\n * @return {?}\n */\nonConfirm(): void {\n        this.resolve(this.value);\n        this.hide();\n    }\n/**\n * 点击【取消】按钮时，关闭Picker\n * @return {?}\n */\nonCancel(): void {\n        this.hide();\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-picker',\n    template: `\n        <div class=\"weui-mask\" (click)=\"onCancel()\"\n            [ngClass]=\"{'weui-animate-fade-in': shown, 'weui-animate-fade-out': !shown}\"></div>\n        <div class=\"weui-picker\"\n            [ngClass]=\"{'weui-animate-slide-up': shown, 'weui-animate-slide-down': !shown}\"\n            (animationend)=\"onAnimationEnd($event)\">\n            <div class=\"weui-picker__hd\">\n                <a href=\"javascript:;\" class=\"weui-picker__action\" (click)=\"onCancel()\">{{cancelText}}  </a>\n                <a href=\"javascript:;\" class=\"weui-picker__action\" (click)=\"onConfirm()\">{{confirmText}}</a>\n            </div>\n            <div class=\"weui-picker__bd\">\n                <weui-picker-group tappable class=\"weui-picker__group\"\n                    *ngFor=\"let options of menus; let i = index;\"\n                    [options]=\"options\" [value]=\"value[i]\" (change)=\"onChange($event, i)\"></weui-picker-group>\n            </div>\n        </div>\n    `,\n    exportAs: 'weuiPicker'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menu': [{ type: Input },],\n'menus': [{ type: Input },],\n'value': [{ type: Input },],\n'cancelText': [{ type: Input },],\n'confirmText': [{ type: Input },],\n'hideCls': [{ type: HostBinding, args: ['class.weui-hide', ] },],\n'close': [{ type: Output },],\n};\n}\n\nfunction WeUIPicker_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIPicker.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIPicker.ctorParameters;\n/** @type {?} */\nWeUIPicker.propDecorators;\n/**\n * \\@i18n\n * @type {?}\n */\nWeUIPicker.prototype.defaults;\n/**\n * 多列菜单列表，内容任意，其中<code>label</code>用于显示，<code>value</code>表示值，<code>disabled</code>表示不可选择项。<br>\n * 注意：列的个数不宜超过3个。\n * @type {?}\n */\nWeUIPicker.prototype.menus;\n/**\n * 当前选择的值（每列对应一个值）\n * @type {?}\n */\nWeUIPicker.prototype.value;\n/**\n * \\@i18n 取消\n * @type {?}\n */\nWeUIPicker.prototype.cancelText;\n/**\n * \\@i18n 确定\n * @type {?}\n */\nWeUIPicker.prototype.confirmText;\n/**\n * 关闭事件\n * @type {?}\n */\nWeUIPicker.prototype.close;\n/**\n * 点击【确定】按钮时，通过Promise.resolve()输出最终值\n * @type {?}\n */\nWeUIPicker.prototype.resolve;\n/**\n * 已显示否\n * @type {?}\n */\nWeUIPicker.prototype.shown;\n/**\n * 已显示否\n * @type {?}\n */\nWeUIPicker.prototype.hidden;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, HostBinding, Renderer2, ElementRef, forwardRef, Optional, Inject } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, COMPOSITION_BUFFER_MODE } from '@angular/forms';\n\n\nimport { WeUIFormControl } from './weui.form.control';\n\n\nconst /** @type {?} */ WEUI_FORM_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => WeUICheckbox),\n    multi: true\n};\nexport class WeUICheckbox extends WeUIFormControl {\n/**\n * 是否已选中\n */\npublic checked = false;\n/**\n * 选中的值\n */\npublic values: any[] = [];\n/**\n * The value of the input ngModel。 (view -> model)\n * @param {?} checked\n * @return {?}\n */\nset innerValue(checked: boolean) {\n        this._value = checked || false;\n\n        const /** @type {?} */ index = this.values.indexOf(this.value);\n        if (checked) {\n            if (index === -1) {\n                this.values.push(this.value);\n            }\n        } else {\n            if (index >= 0) {\n                this.values.splice(index, 1);\n            }\n        }\n\n        // view -> model -> outside world (ie. NgModel on this control)\n        this.onChange(this.values);\n\n        // console.log('innerValue: id=' + this.id + ', name=' + this.name\n        //  + ', values=' + JSON.stringify(this.values) + ', checked=' + this._value);\n    }\n/**\n * Write a new value to the element. (From ControlValueAccessor interface)\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        if (value !== null) {\n            this.values = value;\n        }\n\n        this.checked = this.values.indexOf(this.value) >= 0;\n        super.writeValue(this.checked);\n\n        // console.log('writeValue: id=' + this.id + ', name=' + this.name\n        //  + ', values=' + JSON.stringify(this.values) + ', checked=' + this._value);\n    }\n/**\n * 扩展样式\n */\n_cls_check_label = true;\n/**\n * @param {?} renderer\n * @param {?} elementRef\n * @param {?} compositionMode\n */\nconstructor(\nprivate renderer: Renderer2,\nprivate elementRef: ElementRef,\nprivate compositionMode: boolean) {\n        super(renderer, elementRef, compositionMode);\n        this.value = 'on'; // default value\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-checkbox',\n    providers: [WEUI_FORM_CONTROL_VALUE_ACCESSOR],\n    template: `\n        <label class=\"weui-check__label\" [for]=\"id\" (click)=\"onTouched()\">\n            <div class=\"weui-cell__hd\">\n                <input type=\"checkbox\" class=\"weui-check\"\n                    [attr.id]=\"id\" [attr.name]=\"name\" [value]=\"value\"\n                    [checked]=\"checked\" [(ngModel)]=\"innerValue\">\n                <i class=\"weui-icon-checked\"></i>\n            </div>\n            <div class=\"weui-cell__bd\">\n                {{label}}<ng-content></ng-content>\n            </div>\n        </label>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_cls_check_label': [{ type: HostBinding, args: ['class.weui-check__label', ] },],\n};\n}\n\nfunction WeUICheckbox_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUICheckbox.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUICheckbox.ctorParameters;\n/** @type {?} */\nWeUICheckbox.propDecorators;\n/**\n * 是否已选中\n * @type {?}\n */\nWeUICheckbox.prototype.checked;\n/**\n * 选中的值\n * @type {?}\n */\nWeUICheckbox.prototype.values;\n/**\n * 扩展样式\n * @type {?}\n */\nWeUICheckbox.prototype._cls_check_label;\n/** @type {?} */\nWeUICheckbox.prototype.renderer;\n/** @type {?} */\nWeUICheckbox.prototype.elementRef;\n/** @type {?} */\nWeUICheckbox.prototype.compositionMode;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input } from '@angular/core';\nexport class WeUISubmit {\n/**\n * 颜色，取值：default、primary、warn等。默认为default。<br>\n * 自定义的颜色名称与色值，可以定义在 工程根目录/src/theme/variables.scss 文件中的 $colors 对象。\n */\ncolor = 'default';\n/**\n * 按钮类型\n */\ntype = 'submit';\n/**\n * 简朴样式 (主要出现此属性)\n */\nplain: string;\n/**\n * 按钮大小 (主要出现此属性)\n */\nmini: string;\n/**\n * 正在加载\n */\nloading = false;\n/**\n * 禁用样式\n */\ndisabled = false;\nconstructor() {\n\n    }\n/**\n * @return {?}\n */\ngetColorStyle(): string {\n        return 'weui-btn_' + (this.plain !== undefined ? 'plain-' : '') + this.color;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-submit',\n    template: `\n        <button [attr.type]=\"type\" class=\"weui-btn {{getColorStyle()}}\"\n            [ngClass]=\"{\n                'weui-btn_disabled': disabled && plain == undefined,\n                'weui-btn_plain-disabled': disabled && plain !== undefined,\n                'weui-btn_loading': loading,\n                'weui-btn_mini': mini !== undefined\n            }\">\n            <i class=\"weui-loading\" *ngIf=\"loading\"></i>\n            <ng-content></ng-content>\n        </button>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'color': [{ type: Input },],\n'type': [{ type: Input },],\n'plain': [{ type: Input },],\n'mini': [{ type: Input },],\n'loading': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction WeUISubmit_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUISubmit.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUISubmit.ctorParameters;\n/** @type {?} */\nWeUISubmit.propDecorators;\n/**\n * 颜色，取值：default、primary、warn等。默认为default。<br>\n * 自定义的颜色名称与色值，可以定义在 工程根目录/src/theme/variables.scss 文件中的 $colors 对象。\n * @type {?}\n */\nWeUISubmit.prototype.color;\n/**\n * 按钮类型\n * @type {?}\n */\nWeUISubmit.prototype.type;\n/**\n * 简朴样式 (主要出现此属性)\n * @type {?}\n */\nWeUISubmit.prototype.plain;\n/**\n * 按钮大小 (主要出现此属性)\n * @type {?}\n */\nWeUISubmit.prototype.mini;\n/**\n * 正在加载\n * @type {?}\n */\nWeUISubmit.prototype.loading;\n/**\n * 禁用样式\n * @type {?}\n */\nWeUISubmit.prototype.disabled;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input } from '@angular/core';\nexport class WeUIButton {\n/**\n * 颜色，取值：default、primary、warn等。默认为default。<br>\n * 自定义的颜色名称与色值，可以定义在 工程根目录/src/theme/variables.scss 文件中的 $colors 对象。\n */\ncolor = 'default';\n/**\n * 简朴样式 (主要出现此属性)\n */\nplain: string;\n/**\n * 按钮大小 (主要出现此属性)\n */\nmini: string;\n/**\n * 正在加载\n */\nloading = false;\n/**\n * 禁用样式\n */\ndisabled = false;\nconstructor() {\n\n    }\n/**\n * @return {?}\n */\ngetColorStyle(): string {\n        return 'weui-btn_' + (this.plain !== undefined ? 'plain-' : '') + this.color;\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-button',\n    template: `\n        <a href=\"javascript:;\" class=\"weui-btn {{getColorStyle()}}\"\n            [ngClass]=\"{\n                'weui-btn_disabled': disabled && plain == undefined,\n                'weui-btn_plain-disabled': disabled && plain !== undefined,\n                'weui-btn_loading': loading,\n                'weui-btn_mini': mini !== undefined\n            }\">\n            <i class=\"weui-loading\" *ngIf=\"loading\"></i>\n            <ng-content></ng-content>\n        </a>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'color': [{ type: Input },],\n'plain': [{ type: Input },],\n'mini': [{ type: Input },],\n'loading': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction WeUIButton_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIButton.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIButton.ctorParameters;\n/** @type {?} */\nWeUIButton.propDecorators;\n/**\n * 颜色，取值：default、primary、warn等。默认为default。<br>\n * 自定义的颜色名称与色值，可以定义在 工程根目录/src/theme/variables.scss 文件中的 $colors 对象。\n * @type {?}\n */\nWeUIButton.prototype.color;\n/**\n * 简朴样式 (主要出现此属性)\n * @type {?}\n */\nWeUIButton.prototype.plain;\n/**\n * 按钮大小 (主要出现此属性)\n * @type {?}\n */\nWeUIButton.prototype.mini;\n/**\n * 正在加载\n * @type {?}\n */\nWeUIButton.prototype.loading;\n/**\n * 禁用样式\n * @type {?}\n */\nWeUIButton.prototype.disabled;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input } from '@angular/core';\n/**\n * 徽章\n */\nexport class WeUIBadge {\n/**\n * 颜色，取值：default、primary、warn等。默认为default。<br>\n * 自定义的颜色名称与色值，可以定义在 工程根目录/src/theme/variables.scss 文件中的 $colors 对象。\n */\ncolor = 'default';\n/**\n * 点\n */\ndot: any;\nconstructor() {\n\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'weui-badge',\n    template: `\n        <span class=\"weui-badge weui-badge_{{color}}\"\n             [ngClass]=\"{'weui-badge_dot': dot !== undefined && dot !== null}\"><ng-content></ng-content></span>`\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'color': [{ type: Input },],\n'dot': [{ type: Input },],\n};\n}\n\nfunction WeUIBadge_tsickle_Closure_declarations() {\n/** @type {?} */\nWeUIBadge.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIBadge.ctorParameters;\n/** @type {?} */\nWeUIBadge.propDecorators;\n/**\n * 颜色，取值：default、primary、warn等。默认为default。<br>\n * 自定义的颜色名称与色值，可以定义在 工程根目录/src/theme/variables.scss 文件中的 $colors 对象。\n * @type {?}\n */\nWeUIBadge.prototype.color;\n/**\n * 点\n * @type {?}\n */\nWeUIBadge.prototype.dot;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file.\n */\n\n\nimport { Component, Input, Renderer2, ElementRef, Inject, Optional, HostBinding } from '@angular/core';\nimport { DefaultValueAccessor } from '@angular/forms';\nimport { COMPOSITION_BUFFER_MODE } from '@angular/forms';\nexport /*abstract*/ class WeUIFormControl extends DefaultValueAccessor {\n/**\n * 计数器\n */\npublic static count = 0;\n/**\n * 控件ID\n */\nid: string;\n/**\n * 控件name\n */\nname: string;\n/**\n * 控件 label\n */\nlabel: string;\n/**\n * 是否禁用\n */\ndisabled = false;\n/**\n * value 属性为 input 元素设定值。<br>\n * \n * 对于不同的输入类型，value 属性的用法也不同：<ul>\n * <li> type=\"button\", \"reset\", \"submit\" - 定义按钮上的显示的文本 </li>\n * <li> type=\"text\", \"password\", \"hidden\" - 定义输入字段的初始值 </li>\n * <li> type=\"checkbox\", \"radio\", \"image\" - 定义与输入相关联的值 </li>\n * </ul>\n * \n * <p>注释：&lt;input type=\"checkbox\"&gt; 和 &lt;input type=\"radio\"&gt; 中必须设置 <code>value</code> 属性。</p>\n * <p>注释：value 属性无法与 <input type=\"file\"> 一同使用。</p>\n */\nvalue: any;\n/**\n * The internal data model\n */\nprotected _value: any = '';\n/**\n * The value of the input ngModel (model -> view)\n * @return {?}\n */\npublic get innerValue() {\n        return this._value;\n    }\n/**\n * The value of the input ngModel (view -> model)\n * @param {?} newValue\n * @return {?}\n */\npublic set innerValue(newValue: any) {\n        if (this._value !== newValue) {\n            this._value = newValue;\n            // view -> model -> outside world (ie. NgModel on this control)\n            this.onChange(newValue);\n        }\n    }\n/**\n * 注册控件\n * @return {?}\n */\npublic static registerControl(): string {\n        return 'weui-control-' + (++WeUIFormControl.count).toString();\n    }\n\n     _cls_cell = true;\n     _cls_control = true;\n/**\n * @param {?} __renderer\n * @param {?} __elementRef\n * @param {?} __compositionMode\n */\nconstructor(\nprivate __renderer: Renderer2,\nprivate __elementRef: ElementRef,\nprivate __compositionMode: boolean) {\n        super(__renderer, __elementRef, __compositionMode);\n        this.id = WeUIFormControl.registerControl();\n    }\n/**\n * Write a new value to the element. (From ControlValueAccessor interface)\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        this._value = value;\n    }\n/**\n * 设置禁用状态 (From ControlValueAccessor interface)\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'WeUIFormControl',\n    template: ``\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, decorators: [{ type: Inject, args: [Renderer2, ] }, ]},\n{type: ElementRef, decorators: [{ type: Inject, args: [ElementRef, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'name': [{ type: Input },],\n'label': [{ type: Input },],\n'disabled': [{ type: Input },],\n'value': [{ type: Input },],\n'_cls_cell': [{ type: HostBinding, args: ['class.weui-cell', ] },],\n'_cls_control': [{ type: HostBinding, args: ['class.weui-control', ] },],\n};\n}\n\nfunction WeUIFormControl_tsickle_Closure_declarations() {\n/**\n * 计数器\n * @type {?}\n */\nWeUIFormControl.count;\n/** @type {?} */\nWeUIFormControl.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWeUIFormControl.ctorParameters;\n/** @type {?} */\nWeUIFormControl.propDecorators;\n/**\n * 控件ID\n * @type {?}\n */\nWeUIFormControl.prototype.id;\n/**\n * 控件name\n * @type {?}\n */\nWeUIFormControl.prototype.name;\n/**\n * 控件 label\n * @type {?}\n */\nWeUIFormControl.prototype.label;\n/**\n * 是否禁用\n * @type {?}\n */\nWeUIFormControl.prototype.disabled;\n/**\n * value 属性为 input 元素设定值。<br>\n * \n * 对于不同的输入类型，value 属性的用法也不同：<ul>\n * <li> type=\"button\", \"reset\", \"submit\" - 定义按钮上的显示的文本 </li>\n * <li> type=\"text\", \"password\", \"hidden\" - 定义输入字段的初始值 </li>\n * <li> type=\"checkbox\", \"radio\", \"image\" - 定义与输入相关联的值 </li>\n * </ul>\n * \n * <p>注释：&lt;input type=\"checkbox\"&gt; 和 &lt;input type=\"radio\"&gt; 中必须设置 <code>value</code> 属性。</p>\n * <p>注释：value 属性无法与 <input type=\"file\"> 一同使用。</p>\n * @type {?}\n */\nWeUIFormControl.prototype.value;\n/**\n * The internal data model\n * @type {?}\n */\nWeUIFormControl.prototype._value;\n/** @type {?} */\nWeUIFormControl.prototype._cls_cell;\n/** @type {?} */\nWeUIFormControl.prototype._cls_control;\n/** @type {?} */\nWeUIFormControl.prototype.__renderer;\n/** @type {?} */\nWeUIFormControl.prototype.__elementRef;\n/** @type {?} */\nWeUIFormControl.prototype.__compositionMode;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["getDOM"],"mappings":"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"}