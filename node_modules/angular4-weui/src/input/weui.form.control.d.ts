/**
 * @license
 * Copyright 厦门乾元盛世科技有限公司 All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file.
 */
import { Renderer2, ElementRef } from '@angular/core';
import { DefaultValueAccessor } from '@angular/forms';
/**
 * 输入类表单控件。Do NOT use me as element directly!
 */
export declare class WeUIFormControl extends DefaultValueAccessor {
    private __renderer;
    private __elementRef;
    private __compositionMode;
    /** 计数器 */
    static count: number;
    /**
     * 控件ID
     */
    id: string;
    /**
     * 控件name
     */
    name: string;
    /**
     * 控件 label
     */
    label: string;
    /**
     * 是否禁用
     */
    disabled: boolean;
    /**
     * value 属性为 input 元素设定值。<br>
     *
     * 对于不同的输入类型，value 属性的用法也不同：<ul>
     * <li> type="button", "reset", "submit" - 定义按钮上的显示的文本 </li>
     * <li> type="text", "password", "hidden" - 定义输入字段的初始值 </li>
     * <li> type="checkbox", "radio", "image" - 定义与输入相关联的值 </li>
     * </ul>
     *
     * <p>注释：&lt;input type="checkbox"&gt; 和 &lt;input type="radio"&gt; 中必须设置 <code>value</code> 属性。</p>
     * <p>注释：value 属性无法与 <input type="file"> 一同使用。</p>
     */
    value: any;
    /**
     * The internal data model
     */
    protected _value: any;
    /**
     * The value of the input ngModel (model -> view)
     */
    /**
     * The value of the input ngModel (view -> model)
     */
    innerValue: any;
    /** 注册控件 */
    static registerControl(): string;
    _cls_cell: boolean;
    _cls_control: boolean;
    constructor(__renderer: Renderer2, __elementRef: ElementRef, __compositionMode: boolean);
    /**
     * Write a new value to the element. (From ControlValueAccessor interface)
     */
    writeValue(value: any): void;
    /**
     * 设置禁用状态 (From ControlValueAccessor interface)
     */
    setDisabledState(isDisabled: boolean): void;
}
