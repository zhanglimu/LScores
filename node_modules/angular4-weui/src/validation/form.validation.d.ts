/**
 * @license
 * Let'say COFFEE © 2017-2018
 * Copyright 厦门美乐味餐饮管理有限公司 All Rights Reserved.
 */
import { ElementRef } from '@angular/core';
import { NgForm } from '@angular/forms';
/**
 * 控件与提示信息，例如：<code>
 * {
 *     username: {
 *         required: '用户名不能为空',
 *         maxlength: '请输入小于10位长度的字符',
 *         ......
 *     }
 * }
 * </code>
 */
export interface FieldMessages {
    [key: string]: {
        [key: string]: string;
    };
}
export declare class FormValidation {
    private _element;
    private _form;
    /** 自定义错误消息 */
    messages: FieldMessages;
    /** 控件名称 */
    name: string;
    /** 验证结果，例如: [{username: '必须填写'}, {password: '输入非法'}] */
    protected formErrors: {
        name: string;
        message: string;
    }[];
    protected defaultValidationMessages: {
        required: string;
        email: string;
        url: string;
        date: string;
        dateISO: string;
        number: string;
        digits: string;
        alphanumeric: string;
        maxlength: string;
        minlength: string;
        rangelength: string;
        range: string;
        max: string;
        min: string;
    };
    constructor(_element: ElementRef, _form: NgForm);
    showByName(): boolean;
    /** Form验证后，自动执行消息提示匹配 */
    onSubmit(): void;
    /**
     * 验证表单，结果存入formErrors
     *
     * @param fieldMsgs 验证控件的自定义错误消息，可选，默认采用默认错误消息。
     * @return 验证结果: true-success, false-fail
     */
    validate(): boolean;
    /** 是否已submitted */
    readonly submitted: boolean;
    /** 是否验证通过 */
    readonly valid: boolean;
    /** 是否验证不通过 */
    readonly invalid: boolean;
    /**
     * 是否存在错误
     */
    hasError(name?: string): boolean;
    /**
     * 当存在多个错误消息时，用此方法获取其中的第一个非空错误显示
     */
    firstError(): string | null;
    /**
     * 获取控件的一个错误
     *
     * @param name 控件name
     * @return 控件错误消息，或者空(没有错误)
     */
    getError(name: string): string | null;
}
